<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_test_result" kind="class" language="C++" prot="public">
    <compoundname>TestResult</compoundname>
    <sectiondef kind="friend">
      <memberdef kind="friend" id="class_test_result_1a4c49c2cdb6c328e6b709b4542f23de3c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class TestInfo</definition>
        <argsstring></argsstring>
        <name>TestInfo</name>
        <qualifiedname>TestResult::TestInfo</qualifiedname>
        <param>
          <type><ref refid="classtesting_1_1_test_info" kindref="compound">TestInfo</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googletest/include/gtest/gtest.h" line="446" column="16" bodyfile="build/_deps/googletest-src/googletest/include/gtest/gtest.h" bodystart="446" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="class_test_result_1ab9aaba231fd11196425e75caf709bfc6" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class TestSuite</definition>
        <argsstring></argsstring>
        <name>TestSuite</name>
        <qualifiedname>TestResult::TestSuite</qualifiedname>
        <param>
          <type>TestSuite</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googletest/include/gtest/gtest.h" line="447" column="16" bodyfile="build/_deps/googletest-src/googletest/include/gtest/gtest.h" bodystart="447" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="class_test_result_1a832b4d233efee1a32feb0f4190b30d39" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class UnitTest</definition>
        <argsstring></argsstring>
        <name>UnitTest</name>
        <qualifiedname>TestResult::UnitTest</qualifiedname>
        <param>
          <type><ref refid="classtesting_1_1_unit_test" kindref="compound">UnitTest</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googletest/include/gtest/gtest.h" line="448" column="16" bodyfile="build/_deps/googletest-src/googletest/include/gtest/gtest.h" bodystart="448" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="class_test_result_1abae39633da9932847b41cb80efd62115" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class internal::DefaultGlobalTestPartResultReporter</definition>
        <argsstring></argsstring>
        <name>internal::DefaultGlobalTestPartResultReporter</name>
        <qualifiedname>TestResult::DefaultGlobalTestPartResultReporter</qualifiedname>
        <param>
          <type>internal::DefaultGlobalTestPartResultReporter</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googletest/include/gtest/gtest.h" line="449" column="16" bodyfile="build/_deps/googletest-src/googletest/include/gtest/gtest.h" bodystart="449" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="class_test_result_1adf5553cae6aea6f8648d47e299237e34" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class internal::ExecDeathTest</definition>
        <argsstring></argsstring>
        <name>internal::ExecDeathTest</name>
        <qualifiedname>TestResult::ExecDeathTest</qualifiedname>
        <param>
          <type>internal::ExecDeathTest</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googletest/include/gtest/gtest.h" line="450" column="16" bodyfile="build/_deps/googletest-src/googletest/include/gtest/gtest.h" bodystart="450" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="class_test_result_1ae762da04e74a0d3b0daded3c5bd4a8e8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class internal::TestResultAccessor</definition>
        <argsstring></argsstring>
        <name>internal::TestResultAccessor</name>
        <qualifiedname>TestResult::TestResultAccessor</qualifiedname>
        <param>
          <type>internal::TestResultAccessor</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googletest/include/gtest/gtest.h" line="451" column="16" bodyfile="build/_deps/googletest-src/googletest/include/gtest/gtest.h" bodystart="451" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="class_test_result_1acc0a5e7573fd6ae7ad1878613bb86853" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class internal::UnitTestImpl</definition>
        <argsstring></argsstring>
        <name>internal::UnitTestImpl</name>
        <qualifiedname>TestResult::UnitTestImpl</qualifiedname>
        <param>
          <type>internal::UnitTestImpl</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googletest/include/gtest/gtest.h" line="452" column="16" bodyfile="build/_deps/googletest-src/googletest/include/gtest/gtest.h" bodystart="452" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="class_test_result_1a6aeedc04a0590fcc1b3c5f687dbb0f9f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class internal::WindowsDeathTest</definition>
        <argsstring></argsstring>
        <name>internal::WindowsDeathTest</name>
        <qualifiedname>TestResult::WindowsDeathTest</qualifiedname>
        <param>
          <type>internal::WindowsDeathTest</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googletest/include/gtest/gtest.h" line="453" column="16" bodyfile="build/_deps/googletest-src/googletest/include/gtest/gtest.h" bodystart="453" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="class_test_result_1af29d5921f68031cdfba0b28cf4b3b559" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class internal::FuchsiaDeathTest</definition>
        <argsstring></argsstring>
        <name>internal::FuchsiaDeathTest</name>
        <qualifiedname>TestResult::FuchsiaDeathTest</qualifiedname>
        <param>
          <type>internal::FuchsiaDeathTest</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googletest/include/gtest/gtest.h" line="454" column="16" bodyfile="build/_deps/googletest-src/googletest/include/gtest/gtest.h" bodystart="454" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_test_result_1ac574d3d98d250b5d914aac42f079516a" prot="private" static="no" mutable="no">
        <type>internal::Mutex</type>
        <definition>internal::Mutex testing::TestResult::test_properties_mutex_</definition>
        <argsstring></argsstring>
        <name>test_properties_mutex_</name>
        <qualifiedname>TestResult::test_properties_mutex_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googletest/include/gtest/gtest.h" line="504" column="19" bodyfile="build/_deps/googletest-src/googletest/include/gtest/gtest.h" bodystart="504" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_test_result_1af17c00fae1435d344b318eb6bbb56cff" prot="private" static="no" mutable="no">
        <type>std::vector&lt; TestPartResult &gt;</type>
        <definition>std::vector&lt;TestPartResult&gt; testing::TestResult::test_part_results_</definition>
        <argsstring></argsstring>
        <name>test_part_results_</name>
        <qualifiedname>TestResult::test_part_results_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googletest/include/gtest/gtest.h" line="507" column="15" bodyfile="build/_deps/googletest-src/googletest/include/gtest/gtest.h" bodystart="507" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_test_result_1a29cde491988faff4ef2d9f9b6c13d9fa" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="classtesting_1_1_test_property" kindref="compound">TestProperty</ref> &gt;</type>
        <definition>std::vector&lt;TestProperty&gt; testing::TestResult::test_properties_</definition>
        <argsstring></argsstring>
        <name>test_properties_</name>
        <qualifiedname>TestResult::test_properties_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googletest/include/gtest/gtest.h" line="509" column="15" bodyfile="build/_deps/googletest-src/googletest/include/gtest/gtest.h" bodystart="509" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_test_result_1a3810b34e68f5dca9ad1237a5bde7fa21" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int testing::TestResult::death_test_count_</definition>
        <argsstring></argsstring>
        <name>death_test_count_</name>
        <qualifiedname>TestResult::death_test_count_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googletest/include/gtest/gtest.h" line="511" column="7" bodyfile="build/_deps/googletest-src/googletest/include/gtest/gtest.h" bodystart="511" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_test_result_1a909844dc893ed7e4405b31f410843c22" prot="private" static="no" mutable="no">
        <type>TimeInMillis</type>
        <definition>TimeInMillis testing::TestResult::start_timestamp_</definition>
        <argsstring></argsstring>
        <name>start_timestamp_</name>
        <qualifiedname>TestResult::start_timestamp_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googletest/include/gtest/gtest.h" line="513" column="16" bodyfile="build/_deps/googletest-src/googletest/include/gtest/gtest.h" bodystart="513" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_test_result_1a739a8ca54db4be004ba748b11e82b056" prot="private" static="no" mutable="no">
        <type>TimeInMillis</type>
        <definition>TimeInMillis testing::TestResult::elapsed_time_</definition>
        <argsstring></argsstring>
        <name>elapsed_time_</name>
        <qualifiedname>TestResult::elapsed_time_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googletest/include/gtest/gtest.h" line="515" column="16" bodyfile="build/_deps/googletest-src/googletest/include/gtest/gtest.h" bodystart="515" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_test_result_1a5cf5dd6f416b7334ea601aab21a2fda5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::TestResult::TestResult</definition>
        <argsstring>()</argsstring>
        <name>TestResult</name>
        <qualifiedname>TestResult::TestResult</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googletest/include/gtest/gtest.h" line="402" column="3" bodyfile="build/_deps/googletest-src/googletest/src/gtest.cc" bodystart="2294" bodyend="2295"/>
      </memberdef>
      <memberdef kind="function" id="class_test_result_1a41f407680b725b75d7eadc3230bc3315" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::TestResult::~TestResult</definition>
        <argsstring>()</argsstring>
        <name>~TestResult</name>
        <qualifiedname>TestResult::~TestResult</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googletest/include/gtest/gtest.h" line="405" column="3"/>
      </memberdef>
      <memberdef kind="function" id="class_test_result_1a6174aa4019dcda7c34d776b5741c9032" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int testing::TestResult::total_part_count</definition>
        <argsstring>() const</argsstring>
        <name>total_part_count</name>
        <qualifiedname>TestResult::total_part_count</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googletest/include/gtest/gtest.h" line="409" column="7" bodyfile="build/_deps/googletest-src/googletest/src/gtest.cc" bodystart="2488" bodyend="2490"/>
      </memberdef>
      <memberdef kind="function" id="class_test_result_1afe4523257bbea8bc63b0950b702790be" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int testing::TestResult::test_property_count</definition>
        <argsstring>() const</argsstring>
        <name>test_property_count</name>
        <qualifiedname>TestResult::test_property_count</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googletest/include/gtest/gtest.h" line="412" column="7" bodyfile="build/_deps/googletest-src/googletest/src/gtest.cc" bodystart="2493" bodyend="2495"/>
      </memberdef>
      <memberdef kind="function" id="class_test_result_1acf7e6e72f05a0545c48ea48e7f8851df" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool testing::TestResult::Passed</definition>
        <argsstring>() const</argsstring>
        <name>Passed</name>
        <qualifiedname>TestResult::Passed</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googletest/include/gtest/gtest.h" line="415" column="8" bodyfile="build/_deps/googletest-src/googletest/include/gtest/gtest.h" bodystart="415" bodyend="415"/>
      </memberdef>
      <memberdef kind="function" id="class_test_result_1a4c9e954e0f8c1386206f2e6208c45244" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool testing::TestResult::Skipped</definition>
        <argsstring>() const</argsstring>
        <name>Skipped</name>
        <qualifiedname>TestResult::Skipped</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googletest/include/gtest/gtest.h" line="418" column="8" bodyfile="build/_deps/googletest-src/googletest/src/gtest.cc" bodystart="2454" bodyend="2456"/>
      </memberdef>
      <memberdef kind="function" id="class_test_result_1afacc37e8b43c8574e4101bc61723c769" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool testing::TestResult::Failed</definition>
        <argsstring>() const</argsstring>
        <name>Failed</name>
        <qualifiedname>TestResult::Failed</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googletest/include/gtest/gtest.h" line="421" column="8" bodyfile="build/_deps/googletest-src/googletest/src/gtest.cc" bodystart="2459" bodyend="2464"/>
      </memberdef>
      <memberdef kind="function" id="class_test_result_1a30e00d4076ae07fb5ad7b623d9dc1fe4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool testing::TestResult::HasFatalFailure</definition>
        <argsstring>() const</argsstring>
        <name>HasFatalFailure</name>
        <qualifiedname>TestResult::HasFatalFailure</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googletest/include/gtest/gtest.h" line="424" column="8" bodyfile="build/_deps/googletest-src/googletest/src/gtest.cc" bodystart="2472" bodyend="2474"/>
      </memberdef>
      <memberdef kind="function" id="class_test_result_1a510564fa67b485ed4589a259f2a032d6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool testing::TestResult::HasNonfatalFailure</definition>
        <argsstring>() const</argsstring>
        <name>HasNonfatalFailure</name>
        <qualifiedname>TestResult::HasNonfatalFailure</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googletest/include/gtest/gtest.h" line="427" column="8" bodyfile="build/_deps/googletest-src/googletest/src/gtest.cc" bodystart="2482" bodyend="2484"/>
      </memberdef>
      <memberdef kind="function" id="class_test_result_1a717e05e00d4af5cb809433e343ab63af" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>TimeInMillis</type>
        <definition>TimeInMillis testing::TestResult::elapsed_time</definition>
        <argsstring>() const</argsstring>
        <name>elapsed_time</name>
        <qualifiedname>TestResult::elapsed_time</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googletest/include/gtest/gtest.h" line="430" column="16" bodyfile="build/_deps/googletest-src/googletest/include/gtest/gtest.h" bodystart="430" bodyend="430"/>
      </memberdef>
      <memberdef kind="function" id="class_test_result_1adb268289775c56570cfa4bbd4d233ec9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>TimeInMillis</type>
        <definition>TimeInMillis testing::TestResult::start_timestamp</definition>
        <argsstring>() const</argsstring>
        <name>start_timestamp</name>
        <qualifiedname>TestResult::start_timestamp</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googletest/include/gtest/gtest.h" line="434" column="16" bodyfile="build/_deps/googletest-src/googletest/include/gtest/gtest.h" bodystart="434" bodyend="434"/>
      </memberdef>
      <memberdef kind="function" id="class_test_result_1a765c1e734ac08115757b343d57226bba" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const TestPartResult &amp;</type>
        <definition>const TestPartResult &amp; testing::TestResult::GetTestPartResult</definition>
        <argsstring>(int i) const</argsstring>
        <name>GetTestPartResult</name>
        <qualifiedname>TestResult::GetTestPartResult</qualifiedname>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googletest/include/gtest/gtest.h" line="438" column="24" bodyfile="build/_deps/googletest-src/googletest/src/gtest.cc" bodystart="2303" bodyend="2306"/>
      </memberdef>
      <memberdef kind="function" id="class_test_result_1a6c2f478dbce36b57d18bedded46d70af" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classtesting_1_1_test_property" kindref="compound">TestProperty</ref> &amp;</type>
        <definition>const TestProperty &amp; testing::TestResult::GetTestProperty</definition>
        <argsstring>(int i) const</argsstring>
        <name>GetTestProperty</name>
        <qualifiedname>TestResult::GetTestProperty</qualifiedname>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googletest/include/gtest/gtest.h" line="443" column="22" bodyfile="build/_deps/googletest-src/googletest/src/gtest.cc" bodystart="2311" bodyend="2314"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="class_test_result_1a00e3a4d2c396d9852427e51fb0f82c1a" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::TestResult::TestResult</definition>
        <argsstring>(const TestResult &amp;)=delete</argsstring>
        <name>TestResult</name>
        <qualifiedname>TestResult::TestResult</qualifiedname>
        <param>
          <type>const <ref refid="classtesting_1_1_test_result" kindref="compound">TestResult</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googletest/include/gtest/gtest.h" line="518" column="3"/>
      </memberdef>
      <memberdef kind="function" id="class_test_result_1a07c4d0171e0a70c4506c09f01e14ba29" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const std::vector&lt; TestPartResult &gt; &amp;</type>
        <definition>const std::vector&lt; TestPartResult &gt; &amp; testing::TestResult::test_part_results</definition>
        <argsstring>() const</argsstring>
        <name>test_part_results</name>
        <qualifiedname>TestResult::test_part_results</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googletest/include/gtest/gtest.h" line="457" column="21" bodyfile="build/_deps/googletest-src/googletest/include/gtest/gtest.h" bodystart="457" bodyend="459"/>
      </memberdef>
      <memberdef kind="function" id="class_test_result_1a428565f930a5c88c7f0b1bc6099e6799" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const std::vector&lt; <ref refid="classtesting_1_1_test_property" kindref="compound">TestProperty</ref> &gt; &amp;</type>
        <definition>const std::vector&lt; TestProperty &gt; &amp; testing::TestResult::test_properties</definition>
        <argsstring>() const</argsstring>
        <name>test_properties</name>
        <qualifiedname>TestResult::test_properties</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googletest/include/gtest/gtest.h" line="462" column="21" bodyfile="build/_deps/googletest-src/googletest/include/gtest/gtest.h" bodystart="462" bodyend="464"/>
      </memberdef>
      <memberdef kind="function" id="class_test_result_1a52b34487c131dc48f9f2a18a0c467b82" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void testing::TestResult::set_start_timestamp</definition>
        <argsstring>(TimeInMillis start)</argsstring>
        <name>set_start_timestamp</name>
        <qualifiedname>TestResult::set_start_timestamp</qualifiedname>
        <param>
          <type>TimeInMillis</type>
          <declname>start</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googletest/include/gtest/gtest.h" line="467" column="8" bodyfile="build/_deps/googletest-src/googletest/include/gtest/gtest.h" bodystart="467" bodyend="467"/>
      </memberdef>
      <memberdef kind="function" id="class_test_result_1aa345325e5dea41609d17d7c614bf2b18" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void testing::TestResult::set_elapsed_time</definition>
        <argsstring>(TimeInMillis elapsed)</argsstring>
        <name>set_elapsed_time</name>
        <qualifiedname>TestResult::set_elapsed_time</qualifiedname>
        <param>
          <type>TimeInMillis</type>
          <declname>elapsed</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googletest/include/gtest/gtest.h" line="470" column="8" bodyfile="build/_deps/googletest-src/googletest/include/gtest/gtest.h" bodystart="470" bodyend="470"/>
      </memberdef>
      <memberdef kind="function" id="class_test_result_1ac253b0fd7ea70f457e9517e415eac32d" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void testing::TestResult::RecordProperty</definition>
        <argsstring>(const std::string &amp;xml_element, const TestProperty &amp;test_property)</argsstring>
        <name>RecordProperty</name>
        <qualifiedname>TestResult::RecordProperty</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>xml_element</declname>
        </param>
        <param>
          <type>const <ref refid="classtesting_1_1_test_property" kindref="compound">TestProperty</ref> &amp;</type>
          <declname>test_property</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googletest/include/gtest/gtest.h" line="478" column="8" bodyfile="build/_deps/googletest-src/googletest/src/gtest.cc" bodystart="2327" bodyend="2341"/>
      </memberdef>
      <memberdef kind="function" id="class_test_result_1ac28e9821ad3e9314c4fe41b119c5b44d" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void testing::TestResult::AddTestPartResult</definition>
        <argsstring>(const TestPartResult &amp;test_part_result)</argsstring>
        <name>AddTestPartResult</name>
        <qualifiedname>TestResult::AddTestPartResult</qualifiedname>
        <param>
          <type>const TestPartResult &amp;</type>
          <declname>test_part_result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googletest/include/gtest/gtest.h" line="488" column="8" bodyfile="build/_deps/googletest-src/googletest/src/gtest.cc" bodystart="2320" bodyend="2322"/>
      </memberdef>
      <memberdef kind="function" id="class_test_result_1a827cb78135ac375d81d89ffedc3eca52" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int testing::TestResult::death_test_count</definition>
        <argsstring>() const</argsstring>
        <name>death_test_count</name>
        <qualifiedname>TestResult::death_test_count</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googletest/include/gtest/gtest.h" line="491" column="7" bodyfile="build/_deps/googletest-src/googletest/include/gtest/gtest.h" bodystart="491" bodyend="491"/>
      </memberdef>
      <memberdef kind="function" id="class_test_result_1a07faaa1d16a991f34222d02e10c75dc2" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int testing::TestResult::increment_death_test_count</definition>
        <argsstring>()</argsstring>
        <name>increment_death_test_count</name>
        <qualifiedname>TestResult::increment_death_test_count</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googletest/include/gtest/gtest.h" line="494" column="7" bodyfile="build/_deps/googletest-src/googletest/include/gtest/gtest.h" bodystart="494" bodyend="494"/>
      </memberdef>
      <memberdef kind="function" id="class_test_result_1aa11ed718e0a76a39e6380e5ddce7cae2" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void testing::TestResult::ClearTestPartResults</definition>
        <argsstring>()</argsstring>
        <name>ClearTestPartResults</name>
        <qualifiedname>TestResult::ClearTestPartResults</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googletest/include/gtest/gtest.h" line="497" column="8" bodyfile="build/_deps/googletest-src/googletest/src/gtest.cc" bodystart="2317" bodyend="2317"/>
      </memberdef>
      <memberdef kind="function" id="class_test_result_1a5371bc2e69435b4cb1fdad9ca81759a6" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void testing::TestResult::Clear</definition>
        <argsstring>()</argsstring>
        <name>Clear</name>
        <qualifiedname>TestResult::Clear</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googletest/include/gtest/gtest.h" line="500" column="8" bodyfile="build/_deps/googletest-src/googletest/src/gtest.cc" bodystart="2441" bodyend="2446"/>
      </memberdef>
      <memberdef kind="function" id="class_test_result_1a467a165ebd2ffb551460f26989c4ae12" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classtesting_1_1_test_result" kindref="compound">TestResult</ref> &amp;</type>
        <definition>TestResult &amp; testing::TestResult::operator=</definition>
        <argsstring>(const TestResult &amp;)=delete</argsstring>
        <name>operator=</name>
        <qualifiedname>TestResult::operator=</qualifiedname>
        <param>
          <type>const <ref refid="classtesting_1_1_test_result" kindref="compound">TestResult</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googletest/include/gtest/gtest.h" line="519" column="14"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-static-func">
      <memberdef kind="function" id="class_test_result_1a818c06cd2bfc00d6c81b0cebca044cb1" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool testing::TestResult::ValidateTestProperty</definition>
        <argsstring>(const std::string &amp;xml_element, const TestProperty &amp;test_property)</argsstring>
        <name>ValidateTestProperty</name>
        <qualifiedname>TestResult::ValidateTestProperty</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>xml_element</declname>
        </param>
        <param>
          <type>const <ref refid="classtesting_1_1_test_property" kindref="compound">TestProperty</ref> &amp;</type>
          <declname>test_property</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googletest/include/gtest/gtest.h" line="484" column="15" bodyfile="build/_deps/googletest-src/googletest/src/gtest.cc" bodystart="2434" bodyend="2438"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="build/_deps/googletest-src/googletest/include/gtest/gtest.h" line="399" column="1" bodyfile="build/_deps/googletest-src/googletest/include/gtest/gtest.h" bodystart="399" bodyend="520"/>
    <listofallmembers>
      <member refid="class_test_result_1ac28e9821ad3e9314c4fe41b119c5b44d" prot="private" virt="non-virtual"><scope>TestResult</scope><name>AddTestPartResult</name></member>
      <member refid="class_test_result_1a5371bc2e69435b4cb1fdad9ca81759a6" prot="private" virt="non-virtual"><scope>TestResult</scope><name>Clear</name></member>
      <member refid="class_test_result_1aa11ed718e0a76a39e6380e5ddce7cae2" prot="private" virt="non-virtual"><scope>TestResult</scope><name>ClearTestPartResults</name></member>
      <member refid="class_test_result_1a827cb78135ac375d81d89ffedc3eca52" prot="private" virt="non-virtual"><scope>TestResult</scope><name>death_test_count</name></member>
      <member refid="class_test_result_1a3810b34e68f5dca9ad1237a5bde7fa21" prot="private" virt="non-virtual"><scope>TestResult</scope><name>death_test_count_</name></member>
      <member refid="class_test_result_1a717e05e00d4af5cb809433e343ab63af" prot="public" virt="non-virtual"><scope>TestResult</scope><name>elapsed_time</name></member>
      <member refid="class_test_result_1a739a8ca54db4be004ba748b11e82b056" prot="private" virt="non-virtual"><scope>TestResult</scope><name>elapsed_time_</name></member>
      <member refid="class_test_result_1afacc37e8b43c8574e4101bc61723c769" prot="public" virt="non-virtual"><scope>TestResult</scope><name>Failed</name></member>
      <member refid="class_test_result_1a765c1e734ac08115757b343d57226bba" prot="public" virt="non-virtual"><scope>TestResult</scope><name>GetTestPartResult</name></member>
      <member refid="class_test_result_1a6c2f478dbce36b57d18bedded46d70af" prot="public" virt="non-virtual"><scope>TestResult</scope><name>GetTestProperty</name></member>
      <member refid="class_test_result_1a30e00d4076ae07fb5ad7b623d9dc1fe4" prot="public" virt="non-virtual"><scope>TestResult</scope><name>HasFatalFailure</name></member>
      <member refid="class_test_result_1a510564fa67b485ed4589a259f2a032d6" prot="public" virt="non-virtual"><scope>TestResult</scope><name>HasNonfatalFailure</name></member>
      <member refid="class_test_result_1a07faaa1d16a991f34222d02e10c75dc2" prot="private" virt="non-virtual"><scope>TestResult</scope><name>increment_death_test_count</name></member>
      <member refid="class_test_result_1abae39633da9932847b41cb80efd62115" prot="public" virt="non-virtual"><scope>TestResult</scope><name>internal::DefaultGlobalTestPartResultReporter</name></member>
      <member refid="class_test_result_1adf5553cae6aea6f8648d47e299237e34" prot="public" virt="non-virtual"><scope>TestResult</scope><name>internal::ExecDeathTest</name></member>
      <member refid="class_test_result_1af29d5921f68031cdfba0b28cf4b3b559" prot="public" virt="non-virtual"><scope>TestResult</scope><name>internal::FuchsiaDeathTest</name></member>
      <member refid="class_test_result_1ae762da04e74a0d3b0daded3c5bd4a8e8" prot="public" virt="non-virtual"><scope>TestResult</scope><name>internal::TestResultAccessor</name></member>
      <member refid="class_test_result_1acc0a5e7573fd6ae7ad1878613bb86853" prot="public" virt="non-virtual"><scope>TestResult</scope><name>internal::UnitTestImpl</name></member>
      <member refid="class_test_result_1a6aeedc04a0590fcc1b3c5f687dbb0f9f" prot="public" virt="non-virtual"><scope>TestResult</scope><name>internal::WindowsDeathTest</name></member>
      <member refid="class_test_result_1a467a165ebd2ffb551460f26989c4ae12" prot="private" virt="non-virtual"><scope>TestResult</scope><name>operator=</name></member>
      <member refid="class_test_result_1acf7e6e72f05a0545c48ea48e7f8851df" prot="public" virt="non-virtual"><scope>TestResult</scope><name>Passed</name></member>
      <member refid="class_test_result_1ac253b0fd7ea70f457e9517e415eac32d" prot="private" virt="non-virtual"><scope>TestResult</scope><name>RecordProperty</name></member>
      <member refid="class_test_result_1aa345325e5dea41609d17d7c614bf2b18" prot="private" virt="non-virtual"><scope>TestResult</scope><name>set_elapsed_time</name></member>
      <member refid="class_test_result_1a52b34487c131dc48f9f2a18a0c467b82" prot="private" virt="non-virtual"><scope>TestResult</scope><name>set_start_timestamp</name></member>
      <member refid="class_test_result_1a4c9e954e0f8c1386206f2e6208c45244" prot="public" virt="non-virtual"><scope>TestResult</scope><name>Skipped</name></member>
      <member refid="class_test_result_1adb268289775c56570cfa4bbd4d233ec9" prot="public" virt="non-virtual"><scope>TestResult</scope><name>start_timestamp</name></member>
      <member refid="class_test_result_1a909844dc893ed7e4405b31f410843c22" prot="private" virt="non-virtual"><scope>TestResult</scope><name>start_timestamp_</name></member>
      <member refid="class_test_result_1a07c4d0171e0a70c4506c09f01e14ba29" prot="private" virt="non-virtual"><scope>TestResult</scope><name>test_part_results</name></member>
      <member refid="class_test_result_1af17c00fae1435d344b318eb6bbb56cff" prot="private" virt="non-virtual"><scope>TestResult</scope><name>test_part_results_</name></member>
      <member refid="class_test_result_1a428565f930a5c88c7f0b1bc6099e6799" prot="private" virt="non-virtual"><scope>TestResult</scope><name>test_properties</name></member>
      <member refid="class_test_result_1a29cde491988faff4ef2d9f9b6c13d9fa" prot="private" virt="non-virtual"><scope>TestResult</scope><name>test_properties_</name></member>
      <member refid="class_test_result_1ac574d3d98d250b5d914aac42f079516a" prot="private" virt="non-virtual"><scope>TestResult</scope><name>test_properties_mutex_</name></member>
      <member refid="class_test_result_1afe4523257bbea8bc63b0950b702790be" prot="public" virt="non-virtual"><scope>TestResult</scope><name>test_property_count</name></member>
      <member refid="class_test_result_1a4c49c2cdb6c328e6b709b4542f23de3c" prot="private" virt="non-virtual"><scope>TestResult</scope><name>TestInfo</name></member>
      <member refid="class_test_result_1a5cf5dd6f416b7334ea601aab21a2fda5" prot="public" virt="non-virtual"><scope>TestResult</scope><name>TestResult</name></member>
      <member refid="class_test_result_1a00e3a4d2c396d9852427e51fb0f82c1a" prot="private" virt="non-virtual"><scope>TestResult</scope><name>TestResult</name></member>
      <member refid="class_test_result_1ab9aaba231fd11196425e75caf709bfc6" prot="private" virt="non-virtual"><scope>TestResult</scope><name>TestSuite</name></member>
      <member refid="class_test_result_1a6174aa4019dcda7c34d776b5741c9032" prot="public" virt="non-virtual"><scope>TestResult</scope><name>total_part_count</name></member>
      <member refid="class_test_result_1a832b4d233efee1a32feb0f4190b30d39" prot="private" virt="non-virtual"><scope>TestResult</scope><name>UnitTest</name></member>
      <member refid="class_test_result_1a818c06cd2bfc00d6c81b0cebca044cb1" prot="private" virt="non-virtual"><scope>TestResult</scope><name>ValidateTestProperty</name></member>
      <member refid="class_test_result_1a41f407680b725b75d7eadc3230bc3315" prot="public" virt="non-virtual"><scope>TestResult</scope><name>~TestResult</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
