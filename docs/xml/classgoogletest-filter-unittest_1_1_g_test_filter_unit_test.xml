<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="classgoogletest-filter-unittest_1_1_g_test_filter_unit_test" kind="class" language="Python" prot="public">
    <compoundname>googletest-filter-unittest::GTestFilterUnitTest</compoundname>
    <basecompoundref prot="public" virt="non-virtual">gtest_test_utils.TestCase</basecompoundref>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classgoogletest-filter-unittest_1_1_g_test_filter_unit_test_1a5cf5a6f569b64b51b6e159debd1964ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>googletest-filter-unittest.GTestFilterUnitTest.AssertSetEqual</definition>
        <argsstring>(self, lhs, rhs)</argsstring>
        <name>AssertSetEqual</name>
        <qualifiedname>googletest-filter-unittest.GTestFilterUnitTest.AssertSetEqual</qualifiedname>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>lhs</type>
          <defname>lhs</defname>
        </param>
        <param>
          <type>rhs</type>
          <defname>rhs</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Asserts that two sets are equal.</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googletest/test/googletest-filter-unittest.py" line="259" column="1" bodyfile="build/_deps/googletest-src/googletest/test/googletest-filter-unittest.py" bodystart="259" bodyend="267"/>
      </memberdef>
      <memberdef kind="function" id="classgoogletest-filter-unittest_1_1_g_test_filter_unit_test_1acee2acd215c275086078059f1ec76c0f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>googletest-filter-unittest.GTestFilterUnitTest.AssertPartitionIsValid</definition>
        <argsstring>(self, set_var, list_of_sets)</argsstring>
        <name>AssertPartitionIsValid</name>
        <qualifiedname>googletest-filter-unittest.GTestFilterUnitTest.AssertPartitionIsValid</qualifiedname>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>set_var</type>
          <defname>set_var</defname>
        </param>
        <param>
          <type>list_of_sets</type>
          <defname>list_of_sets</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Asserts that list_of_sets is a valid partition of set_var.</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googletest/test/googletest-filter-unittest.py" line="268" column="1" bodyfile="build/_deps/googletest-src/googletest/test/googletest-filter-unittest.py" bodystart="268" bodyend="276"/>
      </memberdef>
      <memberdef kind="function" id="classgoogletest-filter-unittest_1_1_g_test_filter_unit_test_1ad3255c47638058bf79131ac44fa2cf49" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>googletest-filter-unittest.GTestFilterUnitTest.AdjustForParameterizedTests</definition>
        <argsstring>(self, tests_to_run)</argsstring>
        <name>AdjustForParameterizedTests</name>
        <qualifiedname>googletest-filter-unittest.GTestFilterUnitTest.AdjustForParameterizedTests</qualifiedname>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>tests_to_run</type>
          <defname>tests_to_run</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Adjust tests_to_run in case value parameterized tests are disabled.</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googletest/test/googletest-filter-unittest.py" line="277" column="1" bodyfile="build/_deps/googletest-src/googletest/test/googletest-filter-unittest.py" bodystart="277" bodyend="285"/>
      </memberdef>
      <memberdef kind="function" id="classgoogletest-filter-unittest_1_1_g_test_filter_unit_test_1a210d536f4dd4dc5d8ea687747ca8d6d5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>googletest-filter-unittest.GTestFilterUnitTest.RunAndVerify</definition>
        <argsstring>(self, gtest_filter, tests_to_run)</argsstring>
        <name>RunAndVerify</name>
        <qualifiedname>googletest-filter-unittest.GTestFilterUnitTest.RunAndVerify</qualifiedname>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>gtest_filter</type>
          <defname>gtest_filter</defname>
        </param>
        <param>
          <type>tests_to_run</type>
          <defname>tests_to_run</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Checks that the binary runs correct set of tests for a given filter.</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googletest/test/googletest-filter-unittest.py" line="286" column="1" bodyfile="build/_deps/googletest-src/googletest/test/googletest-filter-unittest.py" bodystart="286" bodyend="315"/>
      </memberdef>
      <memberdef kind="function" id="classgoogletest-filter-unittest_1_1_g_test_filter_unit_test_1a8c4225edcc9ca56e44976fa0d7d84d0b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>googletest-filter-unittest.GTestFilterUnitTest.RunAndVerifyWithSharding</definition>
        <argsstring>(self, gtest_filter, total_shards, tests_to_run, args=None, check_exit_0=False)</argsstring>
        <name>RunAndVerifyWithSharding</name>
        <qualifiedname>googletest-filter-unittest.GTestFilterUnitTest.RunAndVerifyWithSharding</qualifiedname>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>gtest_filter</type>
          <defname>gtest_filter</defname>
        </param>
        <param>
          <type>total_shards</type>
          <defname>total_shards</defname>
        </param>
        <param>
          <type>tests_to_run</type>
          <defname>tests_to_run</defname>
        </param>
        <param>
          <type>args</type>
          <defname>args</defname>
          <defval>None</defval>
        </param>
        <param>
          <type>check_exit_0</type>
          <defname>check_exit_0</defname>
          <defval>False</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Checks that binary runs correct tests for the given filter and shard.

Runs all shards of googletest-filter-unittest_ with the given filter, and
verifies that the right set of tests were run. The union of tests run
on each shard should be identical to tests_to_run, without duplicates.
If check_exit_0, .

Args:
  gtest_filter: A filter to apply to the tests.
  total_shards: A total number of shards to split test run into.
  tests_to_run: A set of tests expected to run.
  args: Arguments to pass to the to the test binary.
  check_exit_0: When set to a true value, make sure that all shards return
    0.
</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googletest/test/googletest-filter-unittest.py" line="316" column="1" bodyfile="build/_deps/googletest-src/googletest/test/googletest-filter-unittest.py" bodystart="323" bodyend="360"/>
      </memberdef>
      <memberdef kind="function" id="classgoogletest-filter-unittest_1_1_g_test_filter_unit_test_1a8ec218a765232f76b13c81f17c8ee11f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>googletest-filter-unittest.GTestFilterUnitTest.RunAndVerifyAllowingDisabled</definition>
        <argsstring>(self, gtest_filter, tests_to_run)</argsstring>
        <name>RunAndVerifyAllowingDisabled</name>
        <qualifiedname>googletest-filter-unittest.GTestFilterUnitTest.RunAndVerifyAllowingDisabled</qualifiedname>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>gtest_filter</type>
          <defname>gtest_filter</defname>
        </param>
        <param>
          <type>tests_to_run</type>
          <defname>tests_to_run</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Checks that the binary runs correct set of tests for the given filter.

Runs googletest-filter-unittest_ with the given filter, and enables
disabled tests. Verifies that the right set of tests were run.

Args:
  gtest_filter: A filter to apply to the tests.
  tests_to_run: A set of tests expected to run.
</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googletest/test/googletest-filter-unittest.py" line="361" column="1" bodyfile="build/_deps/googletest-src/googletest/test/googletest-filter-unittest.py" bodystart="361" bodyend="381"/>
      </memberdef>
      <memberdef kind="function" id="classgoogletest-filter-unittest_1_1_g_test_filter_unit_test_1a80e82b6c777fbbf575ad83cb8d2ae56c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>googletest-filter-unittest.GTestFilterUnitTest.setUp</definition>
        <argsstring>(self)</argsstring>
        <name>setUp</name>
        <qualifiedname>googletest-filter-unittest.GTestFilterUnitTest.setUp</qualifiedname>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Sets up test case.

Determines whether value-parameterized tests are enabled in the binary and
sets the flags accordingly.
</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googletest/test/googletest-filter-unittest.py" line="382" column="1" bodyfile="build/_deps/googletest-src/googletest/test/googletest-filter-unittest.py" bodystart="382" bodyend="394"/>
      </memberdef>
      <memberdef kind="function" id="classgoogletest-filter-unittest_1_1_g_test_filter_unit_test_1a697b9205bf70806b758c461292a8dd62" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>googletest-filter-unittest.GTestFilterUnitTest.testDefaultBehavior</definition>
        <argsstring>(self)</argsstring>
        <name>testDefaultBehavior</name>
        <qualifiedname>googletest-filter-unittest.GTestFilterUnitTest.testDefaultBehavior</qualifiedname>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Tests the behavior of not specifying the filter.</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googletest/test/googletest-filter-unittest.py" line="395" column="1" bodyfile="build/_deps/googletest-src/googletest/test/googletest-filter-unittest.py" bodystart="395" bodyend="399"/>
      </memberdef>
      <memberdef kind="function" id="classgoogletest-filter-unittest_1_1_g_test_filter_unit_test_1a28fcf68150a9fef1b96cfb68fd0f4265" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>googletest-filter-unittest.GTestFilterUnitTest.testDefaultBehaviorWithShards</definition>
        <argsstring>(self)</argsstring>
        <name>testDefaultBehaviorWithShards</name>
        <qualifiedname>googletest-filter-unittest.GTestFilterUnitTest.testDefaultBehaviorWithShards</qualifiedname>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Tests the behavior without the filter, with sharding enabled.</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googletest/test/googletest-filter-unittest.py" line="400" column="1" bodyfile="build/_deps/googletest-src/googletest/test/googletest-filter-unittest.py" bodystart="400" bodyend="408"/>
      </memberdef>
      <memberdef kind="function" id="classgoogletest-filter-unittest_1_1_g_test_filter_unit_test_1a7f823f76a767837ed5a5d115b2b925c1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>googletest-filter-unittest.GTestFilterUnitTest.testEmptyFilter</definition>
        <argsstring>(self)</argsstring>
        <name>testEmptyFilter</name>
        <qualifiedname>googletest-filter-unittest.GTestFilterUnitTest.testEmptyFilter</qualifiedname>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Tests an empty filter.</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googletest/test/googletest-filter-unittest.py" line="409" column="1" bodyfile="build/_deps/googletest-src/googletest/test/googletest-filter-unittest.py" bodystart="409" bodyend="415"/>
      </memberdef>
      <memberdef kind="function" id="classgoogletest-filter-unittest_1_1_g_test_filter_unit_test_1a53d7fbc58870605bcb7a1ab9be87d572" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>googletest-filter-unittest.GTestFilterUnitTest.testBadFilter</definition>
        <argsstring>(self)</argsstring>
        <name>testBadFilter</name>
        <qualifiedname>googletest-filter-unittest.GTestFilterUnitTest.testBadFilter</qualifiedname>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Tests a filter that matches nothing.</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googletest/test/googletest-filter-unittest.py" line="416" column="1" bodyfile="build/_deps/googletest-src/googletest/test/googletest-filter-unittest.py" bodystart="416" bodyend="421"/>
      </memberdef>
      <memberdef kind="function" id="classgoogletest-filter-unittest_1_1_g_test_filter_unit_test_1af97f1cb7eb2dad213a87a43aca7035f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>googletest-filter-unittest.GTestFilterUnitTest.testFullName</definition>
        <argsstring>(self)</argsstring>
        <name>testFullName</name>
        <qualifiedname>googletest-filter-unittest.GTestFilterUnitTest.testFullName</qualifiedname>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Tests filtering by full name.</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googletest/test/googletest-filter-unittest.py" line="422" column="1" bodyfile="build/_deps/googletest-src/googletest/test/googletest-filter-unittest.py" bodystart="422" bodyend="428"/>
      </memberdef>
      <memberdef kind="function" id="classgoogletest-filter-unittest_1_1_g_test_filter_unit_test_1a1488223d5f274b8812810d2642fa0b28" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>googletest-filter-unittest.GTestFilterUnitTest.testUniversalFilters</definition>
        <argsstring>(self)</argsstring>
        <name>testUniversalFilters</name>
        <qualifiedname>googletest-filter-unittest.GTestFilterUnitTest.testUniversalFilters</qualifiedname>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Tests filters that match everything.</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googletest/test/googletest-filter-unittest.py" line="429" column="1" bodyfile="build/_deps/googletest-src/googletest/test/googletest-filter-unittest.py" bodystart="429" bodyend="437"/>
      </memberdef>
      <memberdef kind="function" id="classgoogletest-filter-unittest_1_1_g_test_filter_unit_test_1a232b0c1ea9124f17b45dde021acf38d1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>googletest-filter-unittest.GTestFilterUnitTest.testFilterByTestCase</definition>
        <argsstring>(self)</argsstring>
        <name>testFilterByTestCase</name>
        <qualifiedname>googletest-filter-unittest.GTestFilterUnitTest.testFilterByTestCase</qualifiedname>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Tests filtering by test case name.</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googletest/test/googletest-filter-unittest.py" line="438" column="1" bodyfile="build/_deps/googletest-src/googletest/test/googletest-filter-unittest.py" bodystart="438" bodyend="448"/>
      </memberdef>
      <memberdef kind="function" id="classgoogletest-filter-unittest_1_1_g_test_filter_unit_test_1a4a64f468269e3c764bd1e7d21c54dc79" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>googletest-filter-unittest.GTestFilterUnitTest.testFilterByTest</definition>
        <argsstring>(self)</argsstring>
        <name>testFilterByTest</name>
        <qualifiedname>googletest-filter-unittest.GTestFilterUnitTest.testFilterByTest</qualifiedname>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Tests filtering by test name.</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googletest/test/googletest-filter-unittest.py" line="449" column="1" bodyfile="build/_deps/googletest-src/googletest/test/googletest-filter-unittest.py" bodystart="449" bodyend="453"/>
      </memberdef>
      <memberdef kind="function" id="classgoogletest-filter-unittest_1_1_g_test_filter_unit_test_1ac8651df71e861e4e6ad5d1df83b02a73" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>googletest-filter-unittest.GTestFilterUnitTest.testFilterDisabledTests</definition>
        <argsstring>(self)</argsstring>
        <name>testFilterDisabledTests</name>
        <qualifiedname>googletest-filter-unittest.GTestFilterUnitTest.testFilterDisabledTests</qualifiedname>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Select only the disabled tests to run.</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googletest/test/googletest-filter-unittest.py" line="454" column="1" bodyfile="build/_deps/googletest-src/googletest/test/googletest-filter-unittest.py" bodystart="454" bodyend="485"/>
      </memberdef>
      <memberdef kind="function" id="classgoogletest-filter-unittest_1_1_g_test_filter_unit_test_1af9177bcffe7e763c50678a62fc9f52de" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>googletest-filter-unittest.GTestFilterUnitTest.testWildcardInTestCaseName</definition>
        <argsstring>(self)</argsstring>
        <name>testWildcardInTestCaseName</name>
        <qualifiedname>googletest-filter-unittest.GTestFilterUnitTest.testWildcardInTestCaseName</qualifiedname>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Tests using wildcard in the test case name.</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googletest/test/googletest-filter-unittest.py" line="486" column="1" bodyfile="build/_deps/googletest-src/googletest/test/googletest-filter-unittest.py" bodystart="486" bodyend="502"/>
      </memberdef>
      <memberdef kind="function" id="classgoogletest-filter-unittest_1_1_g_test_filter_unit_test_1a693ac674970a06bcbc8ca4bfc77936fb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>googletest-filter-unittest.GTestFilterUnitTest.testWildcardInTestName</definition>
        <argsstring>(self)</argsstring>
        <name>testWildcardInTestName</name>
        <qualifiedname>googletest-filter-unittest.GTestFilterUnitTest.testWildcardInTestName</qualifiedname>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Tests using wildcard in the test name.</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googletest/test/googletest-filter-unittest.py" line="503" column="1" bodyfile="build/_deps/googletest-src/googletest/test/googletest-filter-unittest.py" bodystart="503" bodyend="507"/>
      </memberdef>
      <memberdef kind="function" id="classgoogletest-filter-unittest_1_1_g_test_filter_unit_test_1a0fa82fae6d28e800d8765a3aa78300e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>googletest-filter-unittest.GTestFilterUnitTest.testFilterWithoutDot</definition>
        <argsstring>(self)</argsstring>
        <name>testFilterWithoutDot</name>
        <qualifiedname>googletest-filter-unittest.GTestFilterUnitTest.testFilterWithoutDot</qualifiedname>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Tests a filter that has no &apos;.&apos; in it.</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googletest/test/googletest-filter-unittest.py" line="508" column="1" bodyfile="build/_deps/googletest-src/googletest/test/googletest-filter-unittest.py" bodystart="508" bodyend="520"/>
      </memberdef>
      <memberdef kind="function" id="classgoogletest-filter-unittest_1_1_g_test_filter_unit_test_1adbeaecaa57ed5a7fe28d03fa74fca259" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>googletest-filter-unittest.GTestFilterUnitTest.testTwoPatterns</definition>
        <argsstring>(self)</argsstring>
        <name>testTwoPatterns</name>
        <qualifiedname>googletest-filter-unittest.GTestFilterUnitTest.testTwoPatterns</qualifiedname>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Tests filters that consist of two patterns.</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googletest/test/googletest-filter-unittest.py" line="521" column="1" bodyfile="build/_deps/googletest-src/googletest/test/googletest-filter-unittest.py" bodystart="521" bodyend="535"/>
      </memberdef>
      <memberdef kind="function" id="classgoogletest-filter-unittest_1_1_g_test_filter_unit_test_1ae24d85729bb5d527cc424bf5b153399c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>googletest-filter-unittest.GTestFilterUnitTest.testThreePatterns</definition>
        <argsstring>(self)</argsstring>
        <name>testThreePatterns</name>
        <qualifiedname>googletest-filter-unittest.GTestFilterUnitTest.testThreePatterns</qualifiedname>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Tests filters that consist of three patterns.</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googletest/test/googletest-filter-unittest.py" line="536" column="1" bodyfile="build/_deps/googletest-src/googletest/test/googletest-filter-unittest.py" bodystart="536" bodyend="569"/>
      </memberdef>
      <memberdef kind="function" id="classgoogletest-filter-unittest_1_1_g_test_filter_unit_test_1a29becd45f76452c5f4ffdd8e4aa93c33" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>googletest-filter-unittest.GTestFilterUnitTest.testNegativeFilters</definition>
        <argsstring>(self)</argsstring>
        <name>testNegativeFilters</name>
        <qualifiedname>googletest-filter-unittest.GTestFilterUnitTest.testNegativeFilters</qualifiedname>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googletest/test/googletest-filter-unittest.py" line="570" column="1" bodyfile="build/_deps/googletest-src/googletest/test/googletest-filter-unittest.py" bodystart="570" bodyend="642"/>
      </memberdef>
      <memberdef kind="function" id="classgoogletest-filter-unittest_1_1_g_test_filter_unit_test_1a27f4bbf28ee811833af68aa743d3e60e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>googletest-filter-unittest.GTestFilterUnitTest.testFlagOverridesEnvVar</definition>
        <argsstring>(self)</argsstring>
        <name>testFlagOverridesEnvVar</name>
        <qualifiedname>googletest-filter-unittest.GTestFilterUnitTest.testFlagOverridesEnvVar</qualifiedname>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Tests that the filter flag overrides the filtering env. variable.</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googletest/test/googletest-filter-unittest.py" line="643" column="1" bodyfile="build/_deps/googletest-src/googletest/test/googletest-filter-unittest.py" bodystart="643" bodyend="652"/>
      </memberdef>
      <memberdef kind="function" id="classgoogletest-filter-unittest_1_1_g_test_filter_unit_test_1adef3328aa8aa41c42df8ebf099fe4417" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>googletest-filter-unittest.GTestFilterUnitTest.testShardStatusFileIsCreated</definition>
        <argsstring>(self)</argsstring>
        <name>testShardStatusFileIsCreated</name>
        <qualifiedname>googletest-filter-unittest.GTestFilterUnitTest.testShardStatusFileIsCreated</qualifiedname>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Tests that the shard file is created if specified in the environment.</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googletest/test/googletest-filter-unittest.py" line="653" column="1" bodyfile="build/_deps/googletest-src/googletest/test/googletest-filter-unittest.py" bodystart="653" bodyend="667"/>
      </memberdef>
      <memberdef kind="function" id="classgoogletest-filter-unittest_1_1_g_test_filter_unit_test_1ac8f98513c7e29d6b8049ba1084eeee57" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>googletest-filter-unittest.GTestFilterUnitTest.testShardStatusFileIsCreatedWithListTests</definition>
        <argsstring>(self)</argsstring>
        <name>testShardStatusFileIsCreatedWithListTests</name>
        <qualifiedname>googletest-filter-unittest.GTestFilterUnitTest.testShardStatusFileIsCreatedWithListTests</qualifiedname>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Tests that the shard file is created with the &quot;list_tests&quot; flag.</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googletest/test/googletest-filter-unittest.py" line="668" column="1" bodyfile="build/_deps/googletest-src/googletest/test/googletest-filter-unittest.py" bodystart="668" bodyend="695"/>
      </memberdef>
      <memberdef kind="function" id="classgoogletest-filter-unittest_1_1_g_test_filter_unit_test_1a940648febdc046628d9d8393b68a8806" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>googletest-filter-unittest.GTestFilterUnitTest.testDisabledBanner</definition>
        <argsstring>(self)</argsstring>
        <name>testDisabledBanner</name>
        <qualifiedname>googletest-filter-unittest.GTestFilterUnitTest.testDisabledBanner</qualifiedname>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Tests that the disabled banner prints only tests that match filter.</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googletest/test/googletest-filter-unittest.py" line="696" column="1" bodyfile="build/_deps/googletest-src/googletest/test/googletest-filter-unittest.py" bodystart="696" bodyend="717"/>
      </memberdef>
      <memberdef kind="function" id="classgoogletest-filter-unittest_1_1_g_test_filter_unit_test_1ad5343dcfd8acf4cb5cb0147466c19505" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>googletest-filter-unittest.GTestFilterUnitTest.testShardingWorksWithDeathTests</definition>
        <argsstring>(self)</argsstring>
        <name>testShardingWorksWithDeathTests</name>
        <qualifiedname>googletest-filter-unittest.GTestFilterUnitTest.testShardingWorksWithDeathTests</qualifiedname>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Tests integration with death tests and sharding.</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googletest/test/googletest-filter-unittest.py" line="720" column="1" bodyfile="build/_deps/googletest-src/googletest/test/googletest-filter-unittest.py" bodystart="720" bodyend="744"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><verbatim>Tests the env variable or the command line flag to filter tests.</verbatim> </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>googletest-filter-unittest.GTestFilterUnitTest</label>
        <link refid="classgoogletest-filter-unittest_1_1_g_test_filter_unit_test"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>gtest_test_utils.TestCase</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>googletest-filter-unittest.GTestFilterUnitTest</label>
        <link refid="classgoogletest-filter-unittest_1_1_g_test_filter_unit_test"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>gtest_test_utils.TestCase</label>
      </node>
    </collaborationgraph>
    <location file="build/_deps/googletest-src/googletest/test/googletest-filter-unittest.py" line="254" column="1" bodyfile="build/_deps/googletest-src/googletest/test/googletest-filter-unittest.py" bodystart="254" bodyend="744"/>
    <listofallmembers>
      <member refid="classgoogletest-filter-unittest_1_1_g_test_filter_unit_test_1ad3255c47638058bf79131ac44fa2cf49" prot="public" virt="non-virtual"><scope>googletest-filter-unittest::GTestFilterUnitTest</scope><name>AdjustForParameterizedTests</name></member>
      <member refid="classgoogletest-filter-unittest_1_1_g_test_filter_unit_test_1acee2acd215c275086078059f1ec76c0f" prot="public" virt="non-virtual"><scope>googletest-filter-unittest::GTestFilterUnitTest</scope><name>AssertPartitionIsValid</name></member>
      <member refid="classgoogletest-filter-unittest_1_1_g_test_filter_unit_test_1a5cf5a6f569b64b51b6e159debd1964ef" prot="public" virt="non-virtual"><scope>googletest-filter-unittest::GTestFilterUnitTest</scope><name>AssertSetEqual</name></member>
      <member refid="classgoogletest-filter-unittest_1_1_g_test_filter_unit_test_1a210d536f4dd4dc5d8ea687747ca8d6d5" prot="public" virt="non-virtual"><scope>googletest-filter-unittest::GTestFilterUnitTest</scope><name>RunAndVerify</name></member>
      <member refid="classgoogletest-filter-unittest_1_1_g_test_filter_unit_test_1a8ec218a765232f76b13c81f17c8ee11f" prot="public" virt="non-virtual"><scope>googletest-filter-unittest::GTestFilterUnitTest</scope><name>RunAndVerifyAllowingDisabled</name></member>
      <member refid="classgoogletest-filter-unittest_1_1_g_test_filter_unit_test_1a8c4225edcc9ca56e44976fa0d7d84d0b" prot="public" virt="non-virtual"><scope>googletest-filter-unittest::GTestFilterUnitTest</scope><name>RunAndVerifyWithSharding</name></member>
      <member refid="classgoogletest-filter-unittest_1_1_g_test_filter_unit_test_1a80e82b6c777fbbf575ad83cb8d2ae56c" prot="public" virt="non-virtual"><scope>googletest-filter-unittest::GTestFilterUnitTest</scope><name>setUp</name></member>
      <member refid="classgoogletest-filter-unittest_1_1_g_test_filter_unit_test_1a53d7fbc58870605bcb7a1ab9be87d572" prot="public" virt="non-virtual"><scope>googletest-filter-unittest::GTestFilterUnitTest</scope><name>testBadFilter</name></member>
      <member refid="classgoogletest-filter-unittest_1_1_g_test_filter_unit_test_1a697b9205bf70806b758c461292a8dd62" prot="public" virt="non-virtual"><scope>googletest-filter-unittest::GTestFilterUnitTest</scope><name>testDefaultBehavior</name></member>
      <member refid="classgoogletest-filter-unittest_1_1_g_test_filter_unit_test_1a28fcf68150a9fef1b96cfb68fd0f4265" prot="public" virt="non-virtual"><scope>googletest-filter-unittest::GTestFilterUnitTest</scope><name>testDefaultBehaviorWithShards</name></member>
      <member refid="classgoogletest-filter-unittest_1_1_g_test_filter_unit_test_1a940648febdc046628d9d8393b68a8806" prot="public" virt="non-virtual"><scope>googletest-filter-unittest::GTestFilterUnitTest</scope><name>testDisabledBanner</name></member>
      <member refid="classgoogletest-filter-unittest_1_1_g_test_filter_unit_test_1a7f823f76a767837ed5a5d115b2b925c1" prot="public" virt="non-virtual"><scope>googletest-filter-unittest::GTestFilterUnitTest</scope><name>testEmptyFilter</name></member>
      <member refid="classgoogletest-filter-unittest_1_1_g_test_filter_unit_test_1a4a64f468269e3c764bd1e7d21c54dc79" prot="public" virt="non-virtual"><scope>googletest-filter-unittest::GTestFilterUnitTest</scope><name>testFilterByTest</name></member>
      <member refid="classgoogletest-filter-unittest_1_1_g_test_filter_unit_test_1a232b0c1ea9124f17b45dde021acf38d1" prot="public" virt="non-virtual"><scope>googletest-filter-unittest::GTestFilterUnitTest</scope><name>testFilterByTestCase</name></member>
      <member refid="classgoogletest-filter-unittest_1_1_g_test_filter_unit_test_1ac8651df71e861e4e6ad5d1df83b02a73" prot="public" virt="non-virtual"><scope>googletest-filter-unittest::GTestFilterUnitTest</scope><name>testFilterDisabledTests</name></member>
      <member refid="classgoogletest-filter-unittest_1_1_g_test_filter_unit_test_1a0fa82fae6d28e800d8765a3aa78300e0" prot="public" virt="non-virtual"><scope>googletest-filter-unittest::GTestFilterUnitTest</scope><name>testFilterWithoutDot</name></member>
      <member refid="classgoogletest-filter-unittest_1_1_g_test_filter_unit_test_1a27f4bbf28ee811833af68aa743d3e60e" prot="public" virt="non-virtual"><scope>googletest-filter-unittest::GTestFilterUnitTest</scope><name>testFlagOverridesEnvVar</name></member>
      <member refid="classgoogletest-filter-unittest_1_1_g_test_filter_unit_test_1af97f1cb7eb2dad213a87a43aca7035f0" prot="public" virt="non-virtual"><scope>googletest-filter-unittest::GTestFilterUnitTest</scope><name>testFullName</name></member>
      <member refid="classgoogletest-filter-unittest_1_1_g_test_filter_unit_test_1a29becd45f76452c5f4ffdd8e4aa93c33" prot="public" virt="non-virtual"><scope>googletest-filter-unittest::GTestFilterUnitTest</scope><name>testNegativeFilters</name></member>
      <member refid="classgoogletest-filter-unittest_1_1_g_test_filter_unit_test_1ad5343dcfd8acf4cb5cb0147466c19505" prot="public" virt="non-virtual"><scope>googletest-filter-unittest::GTestFilterUnitTest</scope><name>testShardingWorksWithDeathTests</name></member>
      <member refid="classgoogletest-filter-unittest_1_1_g_test_filter_unit_test_1adef3328aa8aa41c42df8ebf099fe4417" prot="public" virt="non-virtual"><scope>googletest-filter-unittest::GTestFilterUnitTest</scope><name>testShardStatusFileIsCreated</name></member>
      <member refid="classgoogletest-filter-unittest_1_1_g_test_filter_unit_test_1ac8f98513c7e29d6b8049ba1084eeee57" prot="public" virt="non-virtual"><scope>googletest-filter-unittest::GTestFilterUnitTest</scope><name>testShardStatusFileIsCreatedWithListTests</name></member>
      <member refid="classgoogletest-filter-unittest_1_1_g_test_filter_unit_test_1ae24d85729bb5d527cc424bf5b153399c" prot="public" virt="non-virtual"><scope>googletest-filter-unittest::GTestFilterUnitTest</scope><name>testThreePatterns</name></member>
      <member refid="classgoogletest-filter-unittest_1_1_g_test_filter_unit_test_1adbeaecaa57ed5a7fe28d03fa74fca259" prot="public" virt="non-virtual"><scope>googletest-filter-unittest::GTestFilterUnitTest</scope><name>testTwoPatterns</name></member>
      <member refid="classgoogletest-filter-unittest_1_1_g_test_filter_unit_test_1a1488223d5f274b8812810d2642fa0b28" prot="public" virt="non-virtual"><scope>googletest-filter-unittest::GTestFilterUnitTest</scope><name>testUniversalFilters</name></member>
      <member refid="classgoogletest-filter-unittest_1_1_g_test_filter_unit_test_1af9177bcffe7e763c50678a62fc9f52de" prot="public" virt="non-virtual"><scope>googletest-filter-unittest::GTestFilterUnitTest</scope><name>testWildcardInTestCaseName</name></member>
      <member refid="classgoogletest-filter-unittest_1_1_g_test_filter_unit_test_1a693ac674970a06bcbc8ca4bfc77936fb" prot="public" virt="non-virtual"><scope>googletest-filter-unittest::GTestFilterUnitTest</scope><name>testWildcardInTestName</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
