<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="namespacefoo" kind="namespace" language="C++">
    <compoundname>foo</compoundname>
    <innerclass refid="classfoo_1_1_mixed_up_test_suite_test" prot="public">foo::MixedUpTestSuiteTest</innerclass>
    <innerclass refid="classfoo_1_1_mixed_up_test_suite_with_same_test_name_test" prot="public">foo::MixedUpTestSuiteWithSameTestNameTest</innerclass>
    <innerclass refid="classfoo_1_1_path_like" prot="public">foo::PathLike</innerclass>
    <innerclass refid="structfoo_1_1_pointer_printable" prot="public">foo::PointerPrintable</innerclass>
    <innerclass refid="structfoo_1_1_printable_via_print_to" prot="public">foo::PrintableViaPrintTo</innerclass>
    <innerclass refid="classfoo_1_1_printable_via_print_to_template" prot="public">foo::PrintableViaPrintToTemplate</innerclass>
    <innerclass refid="structfoo_1_1_streamable_in_local" prot="public">foo::StreamableInLocal</innerclass>
    <innerclass refid="classfoo_1_1_streamable_template_in_foo" prot="public">foo::StreamableTemplateInFoo</innerclass>
    <innerclass refid="structfoo_1_1_templated_streamable_in_foo" prot="public">foo::TemplatedStreamableInFoo</innerclass>
    <innerclass refid="classfoo_1_1_unprintable_in_foo" prot="public">foo::UnprintableInFoo</innerclass>
    <sectiondef kind="func">
      <memberdef kind="function" id="googletest-output-test___8cc_1a849b0cc834d25429f0391db7e0eb9dc1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>foo::TEST_F</definition>
        <argsstring>(MixedUpTestSuiteTest, FirstTestFromNamespaceFoo)</argsstring>
        <name>TEST_F</name>
        <qualifiedname>foo::TEST_F</qualifiedname>
        <param>
          <type><ref refid="classfoo_1_1_mixed_up_test_suite_test" kindref="compound">MixedUpTestSuiteTest</ref></type>
        </param>
        <param>
          <type>FirstTestFromNamespaceFoo</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googletest/test/googletest-output-test_.cc" line="475" column="1" bodyfile="build/_deps/googletest-src/googletest/test/googletest-output-test_.cc" bodystart="475" bodyend="475"/>
      </memberdef>
      <memberdef kind="function" id="googletest-output-test___8cc_1a5e6f45cc38f6752f717235b183163550" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>foo::TEST_F</definition>
        <argsstring>(MixedUpTestSuiteTest, SecondTestFromNamespaceFoo)</argsstring>
        <name>TEST_F</name>
        <qualifiedname>foo::TEST_F</qualifiedname>
        <param>
          <type><ref refid="classfoo_1_1_mixed_up_test_suite_test" kindref="compound">MixedUpTestSuiteTest</ref></type>
        </param>
        <param>
          <type>SecondTestFromNamespaceFoo</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googletest/test/googletest-output-test_.cc" line="476" column="1" bodyfile="build/_deps/googletest-src/googletest/test/googletest-output-test_.cc" bodystart="476" bodyend="476"/>
      </memberdef>
      <memberdef kind="function" id="googletest-output-test___8cc_1afced5d7fbc3e96e3309591e09fbae5c4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>foo::TEST_F</definition>
        <argsstring>(MixedUpTestSuiteWithSameTestNameTest, TheSecondTestWithThisNameShouldFail)</argsstring>
        <name>TEST_F</name>
        <qualifiedname>foo::TEST_F</qualifiedname>
        <param>
          <type><ref refid="classfoo_1_1_mixed_up_test_suite_with_same_test_name_test" kindref="compound">MixedUpTestSuiteWithSameTestNameTest</ref></type>
        </param>
        <param>
          <type>TheSecondTestWithThisNameShouldFail</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googletest/test/googletest-output-test_.cc" line="480" column="1" bodyfile="build/_deps/googletest-src/googletest/test/googletest-output-test_.cc" bodystart="480" bodyend="481"/>
      </memberdef>
      <memberdef kind="function" id="googletest-printers-test_8cc_1ac435de653934c97045bbdba8c8afbe3f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void foo::PrintTo</definition>
        <argsstring>(const PrintableViaPrintTo &amp;x, ::std::ostream *os)</argsstring>
        <name>PrintTo</name>
        <qualifiedname>foo::PrintTo</qualifiedname>
        <param>
          <type>const <ref refid="structfoo_1_1_printable_via_print_to" kindref="compound">PrintableViaPrintTo</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>::std::ostream *</type>
          <declname>os</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googletest/test/googletest-printers-test.cc" line="167" column="6" bodyfile="build/_deps/googletest-src/googletest/test/googletest-printers-test.cc" bodystart="167" bodyend="169"/>
      </memberdef>
      <memberdef kind="function" id="googletest-printers-test_8cc_1aaa854bf85744e6ec2ffa474ce15e36fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>::std::ostream &amp;</type>
        <definition>::std::ostream &amp; foo::operator&lt;&lt;</definition>
        <argsstring>(::std::ostream &amp;os, const PointerPrintable *)</argsstring>
        <name>operator&lt;&lt;</name>
        <qualifiedname>foo::operator&lt;&lt;</qualifiedname>
        <param>
          <type>::std::ostream &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const <ref refid="structfoo_1_1_pointer_printable" kindref="compound">PointerPrintable</ref> *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googletest/test/googletest-printers-test.cc" line="172" column="23" bodyfile="build/_deps/googletest-src/googletest/test/googletest-printers-test.cc" bodystart="174" bodyend="177"/>
      </memberdef>
      <memberdef kind="function" id="googletest-printers-test_8cc_1a7b78eba501ea7ff1226a8cb40b6e3d92" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void foo::PrintTo</definition>
        <argsstring>(const PrintableViaPrintToTemplate&lt; T &gt; &amp;x, ::std::ostream *os)</argsstring>
        <name>PrintTo</name>
        <qualifiedname>foo::PrintTo</qualifiedname>
        <param>
          <type>const <ref refid="classfoo_1_1_printable_via_print_to_template" kindref="compound">PrintableViaPrintToTemplate</ref>&lt; T &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>::std::ostream *</type>
          <declname>os</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googletest/test/googletest-printers-test.cc" line="192" column="6" bodyfile="build/_deps/googletest-src/googletest/test/googletest-printers-test.cc" bodystart="192" bodyend="194"/>
      </memberdef>
      <memberdef kind="function" id="googletest-printers-test_8cc_1a4a4d839c73d5476881324336467fdfd3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>inline ::std::ostream &amp;</type>
        <definition>inline ::std::ostream &amp; foo::operator&lt;&lt;</definition>
        <argsstring>(::std::ostream &amp;os, const StreamableTemplateInFoo&lt; T &gt; &amp;x)</argsstring>
        <name>operator&lt;&lt;</name>
        <qualifiedname>foo::operator&lt;&lt;</qualifiedname>
        <param>
          <type>::std::ostream &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const <ref refid="classfoo_1_1_streamable_template_in_foo" kindref="compound">StreamableTemplateInFoo</ref>&lt; T &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googletest/test/googletest-printers-test.cc" line="209" column="1" bodyfile="build/_deps/googletest-src/googletest/test/googletest-printers-test.cc" bodystart="209" bodyend="212"/>
      </memberdef>
      <memberdef kind="function" id="googletest-printers-test_8cc_1ad0ddb607137c6c0ae4ad1b1524af68b2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename OutputStream</type>
          </param>
        </templateparamlist>
        <type>OutputStream &amp;</type>
        <definition>OutputStream &amp; foo::operator&lt;&lt;</definition>
        <argsstring>(OutputStream &amp;os, const TemplatedStreamableInFoo &amp;)</argsstring>
        <name>operator&lt;&lt;</name>
        <qualifiedname>foo::operator&lt;&lt;</qualifiedname>
        <param>
          <type>OutputStream &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const <ref refid="structfoo_1_1_templated_streamable_in_foo" kindref="compound">TemplatedStreamableInFoo</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googletest/test/googletest-printers-test.cc" line="219" column="1" bodyfile="build/_deps/googletest-src/googletest/test/googletest-printers-test.cc" bodystart="219" bodyend="223"/>
      </memberdef>
      <memberdef kind="function" id="googletest-printers-test_8cc_1ac04e170649a4ea144ed3569a185b2641" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void foo::operator&lt;&lt;</definition>
        <argsstring>(::std::ostream &amp;os, const StreamableInLocal &amp;)</argsstring>
        <name>operator&lt;&lt;</name>
        <qualifiedname>foo::operator&lt;&lt;</qualifiedname>
        <param>
          <type>::std::ostream &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const <ref refid="structfoo_1_1_streamable_in_local" kindref="compound">StreamableInLocal</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googletest/test/googletest-printers-test.cc" line="226" column="1" bodyfile="build/_deps/googletest-src/googletest/test/googletest-printers-test.cc" bodystart="226" bodyend="228"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="build/_deps/googletest-src/googletest/test/googletest-output-test_.cc" line="471" column="1"/>
  </compounddef>
</doxygen>
