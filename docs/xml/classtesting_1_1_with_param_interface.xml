<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="classtesting_1_1_with_param_interface" kind="class" language="C++" prot="public">
    <compoundname>testing::WithParamInterface</compoundname>
    <derivedcompoundref refid="classtesting_1_1_test_with_param" prot="public" virt="non-virtual">testing::TestWithParam&lt; T &gt;</derivedcompoundref>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
    </templateparamlist>
    <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classtesting_1_1_with_param_interface_1a343febaaebf1f025bda484f841d4fec1" prot="public" static="no">
        <type>T</type>
        <definition>typedef T testing::WithParamInterface&lt; T &gt;::ParamType</definition>
        <argsstring></argsstring>
        <name>ParamType</name>
        <qualifiedname>testing::WithParamInterface::ParamType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googletest/include/gtest/gtest.h" line="1691" column="13" bodyfile="build/_deps/googletest-src/googletest/include/gtest/gtest.h" bodystart="1691" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="classtesting_1_1_with_param_interface_1ad105a728ce26e1d52d863dedca8a7898" prot="private" static="yes" mutable="no">
        <type>const ParamType *</type>
        <definition>const ParamType* testing::WithParamInterface&lt; T &gt;::parameter_</definition>
        <argsstring></argsstring>
        <name>parameter_</name>
        <qualifiedname>testing::WithParamInterface::parameter_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googletest/include/gtest/gtest.h" line="1709" column="26" bodyfile="build/_deps/googletest-src/googletest/include/gtest/gtest.h" bodystart="1709" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="friend">
      <memberdef kind="friend" id="classtesting_1_1_with_param_interface_1a7543eb7df89f00fff517dba24bc11dd5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class TestClass</type>
          </param>
        </templateparamlist>
        <type>class</type>
        <definition>friend class internal::ParameterizedTestFactory</definition>
        <argsstring></argsstring>
        <name>internal::ParameterizedTestFactory</name>
        <qualifiedname>testing::WithParamInterface::ParameterizedTestFactory</qualifiedname>
        <param>
          <type><ref refid="classtesting_1_1internal_1_1_parameterized_test_factory" kindref="compound">internal::ParameterizedTestFactory</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googletest/include/gtest/gtest.h" line="1713" column="16" bodyfile="build/_deps/googletest-src/googletest/include/gtest/gtest.h" bodystart="1713" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classtesting_1_1_with_param_interface_1a8cd2cc736e557781561c40e9e851977e" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual testing::WithParamInterface&lt; T &gt;::~WithParamInterface</definition>
        <argsstring>()=default</argsstring>
        <name>~WithParamInterface</name>
        <qualifiedname>testing::WithParamInterface::~WithParamInterface</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googletest/include/gtest/gtest.h" line="1692" column="11"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classtesting_1_1_with_param_interface_1a14a1882601b41bd53cdcb36e5e36de3d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const ParamType &amp;</type>
        <definition>static const ParamType &amp; testing::WithParamInterface&lt; T &gt;::GetParam</definition>
        <argsstring>()</argsstring>
        <name>GetParam</name>
        <qualifiedname>testing::WithParamInterface::GetParam</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googletest/include/gtest/gtest.h" line="1696" column="26" bodyfile="build/_deps/googletest-src/googletest/include/gtest/gtest.h" bodystart="1696" bodyend="1701"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-static-func">
      <memberdef kind="function" id="classtesting_1_1_with_param_interface_1a471e12a61e83347675b649465bc5aabc" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void testing::WithParamInterface&lt; T &gt;::SetParam</definition>
        <argsstring>(const ParamType *parameter)</argsstring>
        <name>SetParam</name>
        <qualifiedname>testing::WithParamInterface::SetParam</qualifiedname>
        <param>
          <type>const ParamType *</type>
          <declname>parameter</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googletest/include/gtest/gtest.h" line="1706" column="15" bodyfile="build/_deps/googletest-src/googletest/include/gtest/gtest.h" bodystart="1706" bodyend="1706"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>CommentTest&lt; Unstreamable &gt;</label>
        <link refid="class_comment_test"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>CustomFunctionNamingTest&lt; std::string &gt;</label>
        <link refid="class_custom_function_naming_test"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>CustomFunctorNamingTest&lt; std::string &gt;</label>
        <link refid="class_custom_functor_naming_test"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>CustomIntegerNamingTest&lt; int &gt;</label>
        <link refid="class_custom_integer_naming_test"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>CustomLambdaNamingTest&lt; std::string &gt;</label>
        <link refid="class_custom_lambda_naming_test"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8">
        <label>CustomStructNamingTest&lt; CustomStruct &gt;</label>
        <link refid="class_custom_struct_naming_test"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9">
        <label>ExternalGeneratorTest&lt; int &gt;</label>
        <link refid="class_external_generator_test"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10">
        <label>GeneratorEvaluationTest&lt; int &gt;</label>
        <link refid="class_generator_evaluation_test"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="11">
        <label>MacroNamingTest&lt; int &gt;</label>
        <link refid="class_macro_naming_test"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="12">
        <label>MultipleInstantiationTest&lt; int &gt;</label>
        <link refid="class_multiple_instantiation_test"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="13">
        <label>NamingTest&lt; int &gt;</label>
        <link refid="class_naming_test"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="14">
        <label>SeparateInstanceTest&lt; int &gt;</label>
        <link refid="class_separate_instance_test"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="15">
        <label>TestGenerationTest&lt; int &gt;</label>
        <link refid="class_test_generation_test"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="16">
        <label>ValueParamTest&lt; int &gt;</label>
        <link refid="class_value_param_test"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>testing::TestWithParam&lt; T &gt;</label>
        <link refid="classtesting_1_1_test_with_param"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>testing::WithParamInterface&lt; T &gt;</label>
        <link refid="classtesting_1_1_with_param_interface"/>
      </node>
    </inheritancegraph>
    <location file="build/_deps/googletest-src/googletest/include/gtest/gtest.h" line="1689" column="1" bodyfile="build/_deps/googletest-src/googletest/include/gtest/gtest.h" bodystart="1689" bodyend="1714"/>
    <listofallmembers>
      <member refid="classtesting_1_1_with_param_interface_1a14a1882601b41bd53cdcb36e5e36de3d" prot="public" virt="non-virtual"><scope>testing::WithParamInterface</scope><name>GetParam</name></member>
      <member refid="classtesting_1_1_with_param_interface_1a7543eb7df89f00fff517dba24bc11dd5" prot="public" virt="non-virtual"><scope>testing::WithParamInterface</scope><name>internal::ParameterizedTestFactory</name></member>
      <member refid="classtesting_1_1_with_param_interface_1ad105a728ce26e1d52d863dedca8a7898" prot="private" virt="non-virtual"><scope>testing::WithParamInterface</scope><name>parameter_</name></member>
      <member refid="classtesting_1_1_with_param_interface_1a343febaaebf1f025bda484f841d4fec1" prot="public" virt="non-virtual"><scope>testing::WithParamInterface</scope><name>ParamType</name></member>
      <member refid="classtesting_1_1_with_param_interface_1a471e12a61e83347675b649465bc5aabc" prot="private" virt="non-virtual"><scope>testing::WithParamInterface</scope><name>SetParam</name></member>
      <member refid="classtesting_1_1_with_param_interface_1a8cd2cc736e557781561c40e9e851977e" prot="public" virt="virtual"><scope>testing::WithParamInterface</scope><name>~WithParamInterface</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
