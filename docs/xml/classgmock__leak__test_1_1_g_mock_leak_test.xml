<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="classgmock__leak__test_1_1_g_mock_leak_test" kind="class" language="Python" prot="public">
    <compoundname>gmock_leak_test::GMockLeakTest</compoundname>
    <basecompoundref prot="public" virt="non-virtual">gmock_test_utils.TestCase</basecompoundref>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classgmock__leak__test_1_1_g_mock_leak_test_1aa7ae0304ee68faa9bbd1761c30cbc152" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>gmock_leak_test.GMockLeakTest.testCatchesLeakedMockByDefault</definition>
        <argsstring>(self)</argsstring>
        <name>testCatchesLeakedMockByDefault</name>
        <qualifiedname>gmock_leak_test.GMockLeakTest.testCatchesLeakedMockByDefault</qualifiedname>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/test/gmock_leak_test.py" line="54" column="1" bodyfile="build/_deps/googletest-src/googlemock/test/gmock_leak_test.py" bodystart="54" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="classgmock__leak__test_1_1_g_mock_leak_test_1acb2eef7f1c3394fde16e7f87a134b740" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>gmock_leak_test.GMockLeakTest.testDoesNotCatchLeakedMockWhenDisabled</definition>
        <argsstring>(self)</argsstring>
        <name>testDoesNotCatchLeakedMockWhenDisabled</name>
        <qualifiedname>gmock_leak_test.GMockLeakTest.testDoesNotCatchLeakedMockWhenDisabled</qualifiedname>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/test/gmock_leak_test.py" line="65" column="1" bodyfile="build/_deps/googletest-src/googlemock/test/gmock_leak_test.py" bodystart="65" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="classgmock__leak__test_1_1_g_mock_leak_test_1a8262d17106e4a6245d5650a65b037e7f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>gmock_leak_test.GMockLeakTest.testCatchesLeakedMockWhenEnabled</definition>
        <argsstring>(self)</argsstring>
        <name>testCatchesLeakedMockWhenEnabled</name>
        <qualifiedname>gmock_leak_test.GMockLeakTest.testCatchesLeakedMockWhenEnabled</qualifiedname>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/test/gmock_leak_test.py" line="80" column="1" bodyfile="build/_deps/googletest-src/googlemock/test/gmock_leak_test.py" bodystart="80" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="classgmock__leak__test_1_1_g_mock_leak_test_1a8b73d72d2f5e0dca81d2bb0c1b2404bb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>gmock_leak_test.GMockLeakTest.testCatchesLeakedMockWhenEnabledWithExplictFlagValue</definition>
        <argsstring>(self)</argsstring>
        <name>testCatchesLeakedMockWhenEnabledWithExplictFlagValue</name>
        <qualifiedname>gmock_leak_test.GMockLeakTest.testCatchesLeakedMockWhenEnabledWithExplictFlagValue</qualifiedname>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/test/gmock_leak_test.py" line="94" column="1" bodyfile="build/_deps/googletest-src/googlemock/test/gmock_leak_test.py" bodystart="94" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="classgmock__leak__test_1_1_g_mock_leak_test_1a0ffe0149fafc97e5fdedbab61d43c2c0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>gmock_leak_test.GMockLeakTest.testCatchesMultipleLeakedMocks</definition>
        <argsstring>(self)</argsstring>
        <name>testCatchesMultipleLeakedMocks</name>
        <qualifiedname>gmock_leak_test.GMockLeakTest.testCatchesMultipleLeakedMocks</qualifiedname>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/test/gmock_leak_test.py" line="103" column="1" bodyfile="build/_deps/googletest-src/googlemock/test/gmock_leak_test.py" bodystart="103" bodyend="111"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>gmock_leak_test.GMockLeakTest</label>
        <link refid="classgmock__leak__test_1_1_g_mock_leak_test"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>gmock_test_utils::TestCase</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>gmock_leak_test.GMockLeakTest</label>
        <link refid="classgmock__leak__test_1_1_g_mock_leak_test"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>gmock_test_utils::TestCase</label>
      </node>
    </collaborationgraph>
    <location file="build/_deps/googletest-src/googlemock/test/gmock_leak_test.py" line="52" column="1" bodyfile="build/_deps/googletest-src/googlemock/test/gmock_leak_test.py" bodystart="52" bodyend="111"/>
    <listofallmembers>
      <member refid="classgmock__leak__test_1_1_g_mock_leak_test_1aa7ae0304ee68faa9bbd1761c30cbc152" prot="public" virt="non-virtual"><scope>gmock_leak_test::GMockLeakTest</scope><name>testCatchesLeakedMockByDefault</name></member>
      <member refid="classgmock__leak__test_1_1_g_mock_leak_test_1a8262d17106e4a6245d5650a65b037e7f" prot="public" virt="non-virtual"><scope>gmock_leak_test::GMockLeakTest</scope><name>testCatchesLeakedMockWhenEnabled</name></member>
      <member refid="classgmock__leak__test_1_1_g_mock_leak_test_1a8b73d72d2f5e0dca81d2bb0c1b2404bb" prot="public" virt="non-virtual"><scope>gmock_leak_test::GMockLeakTest</scope><name>testCatchesLeakedMockWhenEnabledWithExplictFlagValue</name></member>
      <member refid="classgmock__leak__test_1_1_g_mock_leak_test_1a0ffe0149fafc97e5fdedbab61d43c2c0" prot="public" virt="non-virtual"><scope>gmock_leak_test::GMockLeakTest</scope><name>testCatchesMultipleLeakedMocks</name></member>
      <member refid="classgmock__leak__test_1_1_g_mock_leak_test_1acb2eef7f1c3394fde16e7f87a134b740" prot="public" virt="non-virtual"><scope>gmock_leak_test::GMockLeakTest</scope><name>testDoesNotCatchLeakedMockWhenDisabled</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
