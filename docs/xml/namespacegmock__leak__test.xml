<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="namespacegmock__leak__test" kind="namespace" language="Python">
    <compoundname>gmock_leak_test</compoundname>
    <innerclass refid="classgmock__leak__test_1_1_g_mock_leak_test" prot="public">gmock_leak_test::GMockLeakTest</innerclass>
    <sectiondef kind="var">
      <memberdef kind="variable" id="namespacegmock__leak__test_1ace925116117368cd02a7b45571f5133d" prot="public" static="no" mutable="no">
        <type></type>
        <definition>gmock_leak_test.PROGRAM_PATH</definition>
        <argsstring></argsstring>
        <name>PROGRAM_PATH</name>
        <qualifiedname>gmock_leak_test.PROGRAM_PATH</qualifiedname>
        <initializer>=  <ref refid="namespacegmock__test__utils_1a3965eb0947849f247899f6edff7051f7" kindref="member">gmock_test_utils.GetTestExecutablePath</ref>(&apos;gmock_leak_test_&apos;)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/test/gmock_leak_test.py" line="36" column="1" bodyfile="build/_deps/googletest-src/googlemock/test/gmock_leak_test.py" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacegmock__leak__test_1aa03214d2fad1ee0fd3f3101da688ebfc" prot="public" static="no" mutable="no">
        <type>list</type>
        <definition>list gmock_leak_test.TEST_WITH_EXPECT_CALL</definition>
        <argsstring></argsstring>
        <name>TEST_WITH_EXPECT_CALL</name>
        <qualifiedname>gmock_leak_test.TEST_WITH_EXPECT_CALL</qualifiedname>
        <initializer>=  [PROGRAM_PATH, &apos;--gtest_filter=*ExpectCall*&apos;]</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/test/gmock_leak_test.py" line="37" column="1" bodyfile="build/_deps/googletest-src/googlemock/test/gmock_leak_test.py" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacegmock__leak__test_1a5b7e5890b4022a37ef82bdf4eb22ef44" prot="public" static="no" mutable="no">
        <type>list</type>
        <definition>list gmock_leak_test.TEST_WITH_ON_CALL</definition>
        <argsstring></argsstring>
        <name>TEST_WITH_ON_CALL</name>
        <qualifiedname>gmock_leak_test.TEST_WITH_ON_CALL</qualifiedname>
        <initializer>=  [PROGRAM_PATH, &apos;--gtest_filter=*OnCall*&apos;]</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/test/gmock_leak_test.py" line="38" column="1" bodyfile="build/_deps/googletest-src/googlemock/test/gmock_leak_test.py" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacegmock__leak__test_1a9a529935171ee6ab369902d9a77ffbf5" prot="public" static="no" mutable="no">
        <type>list</type>
        <definition>list gmock_leak_test.TEST_MULTIPLE_LEAKS</definition>
        <argsstring></argsstring>
        <name>TEST_MULTIPLE_LEAKS</name>
        <qualifiedname>gmock_leak_test.TEST_MULTIPLE_LEAKS</qualifiedname>
        <initializer>=  [PROGRAM_PATH, &apos;--gtest_filter=*MultipleLeaked*&apos;]</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/test/gmock_leak_test.py" line="39" column="1" bodyfile="build/_deps/googletest-src/googlemock/test/gmock_leak_test.py" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacegmock__leak__test_1a9437a2d2e3bde77354e5c6443ef129f8" prot="public" static="no" mutable="no">
        <type></type>
        <definition>gmock_leak_test.environ</definition>
        <argsstring></argsstring>
        <name>environ</name>
        <qualifiedname>gmock_leak_test.environ</qualifiedname>
        <initializer>=  gmock_test_utils.environ</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/test/gmock_leak_test.py" line="41" column="1" bodyfile="build/_deps/googletest-src/googlemock/test/gmock_leak_test.py" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacegmock__leak__test_1a1ab1da2afb1748500a059d59660330cb" prot="public" static="no" mutable="no">
        <type></type>
        <definition>gmock_leak_test.SetEnvVar</definition>
        <argsstring></argsstring>
        <name>SetEnvVar</name>
        <qualifiedname>gmock_leak_test.SetEnvVar</qualifiedname>
        <initializer>=  gmock_test_utils.SetEnvVar</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/test/gmock_leak_test.py" line="42" column="1" bodyfile="build/_deps/googletest-src/googlemock/test/gmock_leak_test.py" bodystart="42" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><verbatim>Tests that leaked mock objects can be caught be Google Mock.</verbatim> </para>
    </detaileddescription>
    <location file="build/_deps/googletest-src/googlemock/test/gmock_leak_test.py" line="1" column="1"/>
  </compounddef>
</doxygen>
