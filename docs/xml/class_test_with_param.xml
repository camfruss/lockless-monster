<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_test_with_param" kind="class" language="C++" prot="public">
    <compoundname>TestWithParam</compoundname>
    <basecompoundref refid="classtesting_1_1_test" prot="public" virt="non-virtual">testing::Test</basecompoundref>
    <basecompoundref refid="classtesting_1_1_with_param_interface" prot="public" virt="non-virtual">testing::WithParamInterface&lt; T &gt;</basecompoundref>
    <derivedcompoundref refid="class_comment_test" prot="public" virt="non-virtual">CommentTest</derivedcompoundref>
    <derivedcompoundref refid="class_custom_function_naming_test" prot="public" virt="non-virtual">CustomFunctionNamingTest</derivedcompoundref>
    <derivedcompoundref refid="class_custom_functor_naming_test" prot="public" virt="non-virtual">CustomFunctorNamingTest</derivedcompoundref>
    <derivedcompoundref refid="class_custom_integer_naming_test" prot="public" virt="non-virtual">CustomIntegerNamingTest</derivedcompoundref>
    <derivedcompoundref refid="class_custom_lambda_naming_test" prot="public" virt="non-virtual">CustomLambdaNamingTest</derivedcompoundref>
    <derivedcompoundref refid="class_custom_struct_naming_test" prot="public" virt="non-virtual">CustomStructNamingTest</derivedcompoundref>
    <derivedcompoundref refid="class_external_generator_test" prot="public" virt="non-virtual">ExternalGeneratorTest</derivedcompoundref>
    <derivedcompoundref refid="class_generator_evaluation_test" prot="public" virt="non-virtual">GeneratorEvaluationTest</derivedcompoundref>
    <derivedcompoundref refid="class_macro_naming_test" prot="public" virt="non-virtual">MacroNamingTest</derivedcompoundref>
    <derivedcompoundref refid="class_multiple_instantiation_test" prot="public" virt="non-virtual">MultipleInstantiationTest</derivedcompoundref>
    <derivedcompoundref refid="class_naming_test" prot="public" virt="non-virtual">NamingTest</derivedcompoundref>
    <derivedcompoundref refid="class_separate_instance_test" prot="public" virt="non-virtual">SeparateInstanceTest</derivedcompoundref>
    <derivedcompoundref refid="class_test_generation_test" prot="public" virt="non-virtual">TestGenerationTest</derivedcompoundref>
    <derivedcompoundref refid="class_value_param_test" prot="public" virt="non-virtual">ValueParamTest</derivedcompoundref>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
    </templateparamlist>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="4">
        <label>CommentTest&lt; Unstreamable &gt;</label>
        <link refid="class_comment_test"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>CustomFunctionNamingTest&lt; std::string &gt;</label>
        <link refid="class_custom_function_naming_test"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>CustomFunctorNamingTest&lt; std::string &gt;</label>
        <link refid="class_custom_functor_naming_test"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>CustomIntegerNamingTest&lt; int &gt;</label>
        <link refid="class_custom_integer_naming_test"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8">
        <label>CustomLambdaNamingTest&lt; std::string &gt;</label>
        <link refid="class_custom_lambda_naming_test"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9">
        <label>CustomStructNamingTest&lt; CustomStruct &gt;</label>
        <link refid="class_custom_struct_naming_test"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10">
        <label>ExternalGeneratorTest&lt; int &gt;</label>
        <link refid="class_external_generator_test"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="11">
        <label>GeneratorEvaluationTest&lt; int &gt;</label>
        <link refid="class_generator_evaluation_test"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="12">
        <label>MacroNamingTest&lt; int &gt;</label>
        <link refid="class_macro_naming_test"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="13">
        <label>MultipleInstantiationTest&lt; int &gt;</label>
        <link refid="class_multiple_instantiation_test"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="14">
        <label>NamingTest&lt; int &gt;</label>
        <link refid="class_naming_test"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="15">
        <label>SeparateInstanceTest&lt; int &gt;</label>
        <link refid="class_separate_instance_test"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="16">
        <label>TestGenerationTest&lt; int &gt;</label>
        <link refid="class_test_generation_test"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>TestWithParam&lt; T &gt;</label>
        <link refid="class_test_with_param"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="17">
        <label>ValueParamTest&lt; int &gt;</label>
        <link refid="class_value_param_test"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>testing::Test</label>
        <link refid="classtesting_1_1_test"/>
      </node>
      <node id="3">
        <label>testing::WithParamInterface&lt; T &gt;</label>
        <link refid="classtesting_1_1_with_param_interface"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>TestWithParam&lt; T &gt;</label>
        <link refid="class_test_with_param"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>testing::Test</label>
        <link refid="classtesting_1_1_test"/>
      </node>
      <node id="3">
        <label>testing::WithParamInterface&lt; T &gt;</label>
        <link refid="classtesting_1_1_with_param_interface"/>
      </node>
    </collaborationgraph>
    <location file="build/_deps/googletest-src/googletest/include/gtest/gtest.h" line="1723" column="1" bodyfile="build/_deps/googletest-src/googletest/include/gtest/gtest.h" bodystart="1723" bodyend="1723"/>
    <listofallmembers>
    </listofallmembers>
  </compounddef>
</doxygen>
