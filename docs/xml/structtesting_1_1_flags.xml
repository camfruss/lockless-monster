<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="structtesting_1_1_flags" kind="struct" language="C++" prot="public">
    <compoundname>testing::Flags</compoundname>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structtesting_1_1_flags_1a8ebf8c68f918b9039926b569c880f910" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool testing::Flags::also_run_disabled_tests</definition>
        <argsstring></argsstring>
        <name>also_run_disabled_tests</name>
        <qualifiedname>testing::Flags::also_run_disabled_tests</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googletest/test/gtest_unittest.cc" line="5684" column="8" bodyfile="build/_deps/googletest-src/googletest/test/gtest_unittest.cc" bodystart="5684" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structtesting_1_1_flags_1acccce2a9673bb61751269d2ef9c21c89" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool testing::Flags::break_on_failure</definition>
        <argsstring></argsstring>
        <name>break_on_failure</name>
        <qualifiedname>testing::Flags::break_on_failure</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googletest/test/gtest_unittest.cc" line="5685" column="8" bodyfile="build/_deps/googletest-src/googletest/test/gtest_unittest.cc" bodystart="5685" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structtesting_1_1_flags_1a06984d0553f09716e1bd9f159e7cc644" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool testing::Flags::catch_exceptions</definition>
        <argsstring></argsstring>
        <name>catch_exceptions</name>
        <qualifiedname>testing::Flags::catch_exceptions</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googletest/test/gtest_unittest.cc" line="5686" column="8" bodyfile="build/_deps/googletest-src/googletest/test/gtest_unittest.cc" bodystart="5686" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structtesting_1_1_flags_1a7cdef4e6e102771fc15940931dd07e5c" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool testing::Flags::death_test_use_fork</definition>
        <argsstring></argsstring>
        <name>death_test_use_fork</name>
        <qualifiedname>testing::Flags::death_test_use_fork</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googletest/test/gtest_unittest.cc" line="5687" column="8" bodyfile="build/_deps/googletest-src/googletest/test/gtest_unittest.cc" bodystart="5687" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structtesting_1_1_flags_1a9f149e4d169ef3d2707c5e4cbca04753" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool testing::Flags::fail_fast</definition>
        <argsstring></argsstring>
        <name>fail_fast</name>
        <qualifiedname>testing::Flags::fail_fast</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googletest/test/gtest_unittest.cc" line="5688" column="8" bodyfile="build/_deps/googletest-src/googletest/test/gtest_unittest.cc" bodystart="5688" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structtesting_1_1_flags_1aa52c1048a7e3cbe726ed4160f2e05d14" prot="public" static="no" mutable="no">
        <type>const char *</type>
        <definition>const char* testing::Flags::filter</definition>
        <argsstring></argsstring>
        <name>filter</name>
        <qualifiedname>testing::Flags::filter</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googletest/test/gtest_unittest.cc" line="5689" column="14" bodyfile="build/_deps/googletest-src/googletest/test/gtest_unittest.cc" bodystart="5689" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structtesting_1_1_flags_1a3c73f29131074146224018066379fb2f" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool testing::Flags::list_tests</definition>
        <argsstring></argsstring>
        <name>list_tests</name>
        <qualifiedname>testing::Flags::list_tests</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googletest/test/gtest_unittest.cc" line="5690" column="8" bodyfile="build/_deps/googletest-src/googletest/test/gtest_unittest.cc" bodystart="5690" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structtesting_1_1_flags_1a8c8289b3af9310744bc25280e3980e4b" prot="public" static="no" mutable="no">
        <type>const char *</type>
        <definition>const char* testing::Flags::output</definition>
        <argsstring></argsstring>
        <name>output</name>
        <qualifiedname>testing::Flags::output</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googletest/test/gtest_unittest.cc" line="5691" column="14" bodyfile="build/_deps/googletest-src/googletest/test/gtest_unittest.cc" bodystart="5691" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structtesting_1_1_flags_1acffa8259476e4f802ed15d9fc9e2352c" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool testing::Flags::brief</definition>
        <argsstring></argsstring>
        <name>brief</name>
        <qualifiedname>testing::Flags::brief</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googletest/test/gtest_unittest.cc" line="5692" column="8" bodyfile="build/_deps/googletest-src/googletest/test/gtest_unittest.cc" bodystart="5692" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structtesting_1_1_flags_1a8758d574ce5513402679df258f788733" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool testing::Flags::print_time</definition>
        <argsstring></argsstring>
        <name>print_time</name>
        <qualifiedname>testing::Flags::print_time</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googletest/test/gtest_unittest.cc" line="5693" column="8" bodyfile="build/_deps/googletest-src/googletest/test/gtest_unittest.cc" bodystart="5693" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structtesting_1_1_flags_1a89b3c85eff50bc081ab6c590359ad190" prot="public" static="no" mutable="no">
        <type>int32_t</type>
        <definition>int32_t testing::Flags::random_seed</definition>
        <argsstring></argsstring>
        <name>random_seed</name>
        <qualifiedname>testing::Flags::random_seed</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googletest/test/gtest_unittest.cc" line="5694" column="11" bodyfile="build/_deps/googletest-src/googletest/test/gtest_unittest.cc" bodystart="5694" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structtesting_1_1_flags_1a396ed200e54cd32883504b668eeb5632" prot="public" static="no" mutable="no">
        <type>int32_t</type>
        <definition>int32_t testing::Flags::repeat</definition>
        <argsstring></argsstring>
        <name>repeat</name>
        <qualifiedname>testing::Flags::repeat</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googletest/test/gtest_unittest.cc" line="5695" column="11" bodyfile="build/_deps/googletest-src/googletest/test/gtest_unittest.cc" bodystart="5695" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structtesting_1_1_flags_1a0cd248c27f2747daf39af989c2f09eeb" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool testing::Flags::recreate_environments_when_repeating</definition>
        <argsstring></argsstring>
        <name>recreate_environments_when_repeating</name>
        <qualifiedname>testing::Flags::recreate_environments_when_repeating</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googletest/test/gtest_unittest.cc" line="5696" column="8" bodyfile="build/_deps/googletest-src/googletest/test/gtest_unittest.cc" bodystart="5696" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structtesting_1_1_flags_1a51c689e47e0f55c16116ac2a1d3b05d6" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool testing::Flags::shuffle</definition>
        <argsstring></argsstring>
        <name>shuffle</name>
        <qualifiedname>testing::Flags::shuffle</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googletest/test/gtest_unittest.cc" line="5697" column="8" bodyfile="build/_deps/googletest-src/googletest/test/gtest_unittest.cc" bodystart="5697" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structtesting_1_1_flags_1aedd60cacac5202d70bdbca9227e77c7f" prot="public" static="no" mutable="no">
        <type>int32_t</type>
        <definition>int32_t testing::Flags::stack_trace_depth</definition>
        <argsstring></argsstring>
        <name>stack_trace_depth</name>
        <qualifiedname>testing::Flags::stack_trace_depth</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googletest/test/gtest_unittest.cc" line="5698" column="11" bodyfile="build/_deps/googletest-src/googletest/test/gtest_unittest.cc" bodystart="5698" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structtesting_1_1_flags_1ab09849fd3e095d5628dec65ec4dce9e1" prot="public" static="no" mutable="no">
        <type>const char *</type>
        <definition>const char* testing::Flags::stream_result_to</definition>
        <argsstring></argsstring>
        <name>stream_result_to</name>
        <qualifiedname>testing::Flags::stream_result_to</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googletest/test/gtest_unittest.cc" line="5699" column="14" bodyfile="build/_deps/googletest-src/googletest/test/gtest_unittest.cc" bodystart="5699" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structtesting_1_1_flags_1ab8e7d21e31e641efe47b8050759e001a" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool testing::Flags::throw_on_failure</definition>
        <argsstring></argsstring>
        <name>throw_on_failure</name>
        <qualifiedname>testing::Flags::throw_on_failure</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googletest/test/gtest_unittest.cc" line="5700" column="8" bodyfile="build/_deps/googletest-src/googletest/test/gtest_unittest.cc" bodystart="5700" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="structtesting_1_1_flags_1a41dc8942bec08ebc7f74dee545e6ad7e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>testing::Flags::Flags</definition>
        <argsstring>()</argsstring>
        <name>Flags</name>
        <qualifiedname>testing::Flags::Flags</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googletest/test/gtest_unittest.cc" line="5524" column="3" bodyfile="build/_deps/googletest-src/googletest/test/gtest_unittest.cc" bodystart="5524" bodyend="5541"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-static-func">
      <memberdef kind="function" id="structtesting_1_1_flags_1a8bee2b5f94d8248b6791d6b005db146f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structtesting_1_1_flags" kindref="compound">Flags</ref></type>
        <definition>static Flags testing::Flags::AlsoRunDisabledTests</definition>
        <argsstring>(bool also_run_disabled_tests)</argsstring>
        <name>AlsoRunDisabledTests</name>
        <qualifiedname>testing::Flags::AlsoRunDisabledTests</qualifiedname>
        <param>
          <type>bool</type>
          <declname>also_run_disabled_tests</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googletest/test/gtest_unittest.cc" line="5547" column="16" bodyfile="build/_deps/googletest-src/googletest/test/gtest_unittest.cc" bodystart="5547" bodyend="5551"/>
      </memberdef>
      <memberdef kind="function" id="structtesting_1_1_flags_1a62660e44922321f7640bc951a04c2296" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structtesting_1_1_flags" kindref="compound">Flags</ref></type>
        <definition>static Flags testing::Flags::BreakOnFailure</definition>
        <argsstring>(bool break_on_failure)</argsstring>
        <name>BreakOnFailure</name>
        <qualifiedname>testing::Flags::BreakOnFailure</qualifiedname>
        <param>
          <type>bool</type>
          <declname>break_on_failure</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googletest/test/gtest_unittest.cc" line="5555" column="16" bodyfile="build/_deps/googletest-src/googletest/test/gtest_unittest.cc" bodystart="5555" bodyend="5559"/>
      </memberdef>
      <memberdef kind="function" id="structtesting_1_1_flags_1a2c7d89f62f4328ae0ced66154ef96b44" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structtesting_1_1_flags" kindref="compound">Flags</ref></type>
        <definition>static Flags testing::Flags::CatchExceptions</definition>
        <argsstring>(bool catch_exceptions)</argsstring>
        <name>CatchExceptions</name>
        <qualifiedname>testing::Flags::CatchExceptions</qualifiedname>
        <param>
          <type>bool</type>
          <declname>catch_exceptions</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googletest/test/gtest_unittest.cc" line="5563" column="16" bodyfile="build/_deps/googletest-src/googletest/test/gtest_unittest.cc" bodystart="5563" bodyend="5567"/>
      </memberdef>
      <memberdef kind="function" id="structtesting_1_1_flags_1a4468e5625833043596c44be174349d8c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structtesting_1_1_flags" kindref="compound">Flags</ref></type>
        <definition>static Flags testing::Flags::DeathTestUseFork</definition>
        <argsstring>(bool death_test_use_fork)</argsstring>
        <name>DeathTestUseFork</name>
        <qualifiedname>testing::Flags::DeathTestUseFork</qualifiedname>
        <param>
          <type>bool</type>
          <declname>death_test_use_fork</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googletest/test/gtest_unittest.cc" line="5571" column="16" bodyfile="build/_deps/googletest-src/googletest/test/gtest_unittest.cc" bodystart="5571" bodyend="5575"/>
      </memberdef>
      <memberdef kind="function" id="structtesting_1_1_flags_1a76fceab87a2bf1e45d5fa032083a9b13" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structtesting_1_1_flags" kindref="compound">Flags</ref></type>
        <definition>static Flags testing::Flags::FailFast</definition>
        <argsstring>(bool fail_fast)</argsstring>
        <name>FailFast</name>
        <qualifiedname>testing::Flags::FailFast</qualifiedname>
        <param>
          <type>bool</type>
          <declname>fail_fast</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googletest/test/gtest_unittest.cc" line="5579" column="16" bodyfile="build/_deps/googletest-src/googletest/test/gtest_unittest.cc" bodystart="5579" bodyend="5583"/>
      </memberdef>
      <memberdef kind="function" id="structtesting_1_1_flags_1afc7350b7c1ac4c0e0efe2d9a94729eb7" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structtesting_1_1_flags" kindref="compound">Flags</ref></type>
        <definition>static Flags testing::Flags::Filter</definition>
        <argsstring>(const char *filter)</argsstring>
        <name>Filter</name>
        <qualifiedname>testing::Flags::Filter</qualifiedname>
        <param>
          <type>const char *</type>
          <declname>filter</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googletest/test/gtest_unittest.cc" line="5587" column="16" bodyfile="build/_deps/googletest-src/googletest/test/gtest_unittest.cc" bodystart="5587" bodyend="5591"/>
      </memberdef>
      <memberdef kind="function" id="structtesting_1_1_flags_1a825a5d763a31fe6c28f543990bd336df" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structtesting_1_1_flags" kindref="compound">Flags</ref></type>
        <definition>static Flags testing::Flags::ListTests</definition>
        <argsstring>(bool list_tests)</argsstring>
        <name>ListTests</name>
        <qualifiedname>testing::Flags::ListTests</qualifiedname>
        <param>
          <type>bool</type>
          <declname>list_tests</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googletest/test/gtest_unittest.cc" line="5595" column="16" bodyfile="build/_deps/googletest-src/googletest/test/gtest_unittest.cc" bodystart="5595" bodyend="5599"/>
      </memberdef>
      <memberdef kind="function" id="structtesting_1_1_flags_1a507916734a6d7ff2dd02891d7849f2d3" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structtesting_1_1_flags" kindref="compound">Flags</ref></type>
        <definition>static Flags testing::Flags::Output</definition>
        <argsstring>(const char *output)</argsstring>
        <name>Output</name>
        <qualifiedname>testing::Flags::Output</qualifiedname>
        <param>
          <type>const char *</type>
          <declname>output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googletest/test/gtest_unittest.cc" line="5603" column="16" bodyfile="build/_deps/googletest-src/googletest/test/gtest_unittest.cc" bodystart="5603" bodyend="5607"/>
      </memberdef>
      <memberdef kind="function" id="structtesting_1_1_flags_1a367d58aed5d9b8959b648d758449e82c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structtesting_1_1_flags" kindref="compound">Flags</ref></type>
        <definition>static Flags testing::Flags::Brief</definition>
        <argsstring>(bool brief)</argsstring>
        <name>Brief</name>
        <qualifiedname>testing::Flags::Brief</qualifiedname>
        <param>
          <type>bool</type>
          <declname>brief</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googletest/test/gtest_unittest.cc" line="5611" column="16" bodyfile="build/_deps/googletest-src/googletest/test/gtest_unittest.cc" bodystart="5611" bodyend="5615"/>
      </memberdef>
      <memberdef kind="function" id="structtesting_1_1_flags_1af4dc8454995fb3691399a049e95de179" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structtesting_1_1_flags" kindref="compound">Flags</ref></type>
        <definition>static Flags testing::Flags::PrintTime</definition>
        <argsstring>(bool print_time)</argsstring>
        <name>PrintTime</name>
        <qualifiedname>testing::Flags::PrintTime</qualifiedname>
        <param>
          <type>bool</type>
          <declname>print_time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googletest/test/gtest_unittest.cc" line="5619" column="16" bodyfile="build/_deps/googletest-src/googletest/test/gtest_unittest.cc" bodystart="5619" bodyend="5623"/>
      </memberdef>
      <memberdef kind="function" id="structtesting_1_1_flags_1a2d4880f05d0c9bd6acd4c67ebe87f9e0" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structtesting_1_1_flags" kindref="compound">Flags</ref></type>
        <definition>static Flags testing::Flags::RandomSeed</definition>
        <argsstring>(int32_t random_seed)</argsstring>
        <name>RandomSeed</name>
        <qualifiedname>testing::Flags::RandomSeed</qualifiedname>
        <param>
          <type>int32_t</type>
          <declname>random_seed</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googletest/test/gtest_unittest.cc" line="5627" column="16" bodyfile="build/_deps/googletest-src/googletest/test/gtest_unittest.cc" bodystart="5627" bodyend="5631"/>
      </memberdef>
      <memberdef kind="function" id="structtesting_1_1_flags_1a56255ab957ff2fb03f6c3e9f4e3d56f1" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structtesting_1_1_flags" kindref="compound">Flags</ref></type>
        <definition>static Flags testing::Flags::Repeat</definition>
        <argsstring>(int32_t repeat)</argsstring>
        <name>Repeat</name>
        <qualifiedname>testing::Flags::Repeat</qualifiedname>
        <param>
          <type>int32_t</type>
          <declname>repeat</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googletest/test/gtest_unittest.cc" line="5635" column="16" bodyfile="build/_deps/googletest-src/googletest/test/gtest_unittest.cc" bodystart="5635" bodyend="5639"/>
      </memberdef>
      <memberdef kind="function" id="structtesting_1_1_flags_1a74454406b978f0e9e8bf57b7a18af25a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structtesting_1_1_flags" kindref="compound">Flags</ref></type>
        <definition>static Flags testing::Flags::RecreateEnvironmentsWhenRepeating</definition>
        <argsstring>(bool recreate_environments_when_repeating)</argsstring>
        <name>RecreateEnvironmentsWhenRepeating</name>
        <qualifiedname>testing::Flags::RecreateEnvironmentsWhenRepeating</qualifiedname>
        <param>
          <type>bool</type>
          <declname>recreate_environments_when_repeating</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googletest/test/gtest_unittest.cc" line="5643" column="16" bodyfile="build/_deps/googletest-src/googletest/test/gtest_unittest.cc" bodystart="5643" bodyend="5649"/>
      </memberdef>
      <memberdef kind="function" id="structtesting_1_1_flags_1a19ddbbaed61bda44a1940333b7c5a469" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structtesting_1_1_flags" kindref="compound">Flags</ref></type>
        <definition>static Flags testing::Flags::Shuffle</definition>
        <argsstring>(bool shuffle)</argsstring>
        <name>Shuffle</name>
        <qualifiedname>testing::Flags::Shuffle</qualifiedname>
        <param>
          <type>bool</type>
          <declname>shuffle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googletest/test/gtest_unittest.cc" line="5653" column="16" bodyfile="build/_deps/googletest-src/googletest/test/gtest_unittest.cc" bodystart="5653" bodyend="5657"/>
      </memberdef>
      <memberdef kind="function" id="structtesting_1_1_flags_1aafbd8a4b7d59f7780d10c15aa0fdf456" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structtesting_1_1_flags" kindref="compound">Flags</ref></type>
        <definition>static Flags testing::Flags::StackTraceDepth</definition>
        <argsstring>(int32_t stack_trace_depth)</argsstring>
        <name>StackTraceDepth</name>
        <qualifiedname>testing::Flags::StackTraceDepth</qualifiedname>
        <param>
          <type>int32_t</type>
          <declname>stack_trace_depth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googletest/test/gtest_unittest.cc" line="5661" column="16" bodyfile="build/_deps/googletest-src/googletest/test/gtest_unittest.cc" bodystart="5661" bodyend="5665"/>
      </memberdef>
      <memberdef kind="function" id="structtesting_1_1_flags_1a9cf0f64310b28eadbbfbb35584ebfc71" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structtesting_1_1_flags" kindref="compound">Flags</ref></type>
        <definition>static Flags testing::Flags::StreamResultTo</definition>
        <argsstring>(const char *stream_result_to)</argsstring>
        <name>StreamResultTo</name>
        <qualifiedname>testing::Flags::StreamResultTo</qualifiedname>
        <param>
          <type>const char *</type>
          <declname>stream_result_to</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googletest/test/gtest_unittest.cc" line="5669" column="16" bodyfile="build/_deps/googletest-src/googletest/test/gtest_unittest.cc" bodystart="5669" bodyend="5673"/>
      </memberdef>
      <memberdef kind="function" id="structtesting_1_1_flags_1ad856df862414ed0dadf80b5e03829cc7" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structtesting_1_1_flags" kindref="compound">Flags</ref></type>
        <definition>static Flags testing::Flags::ThrowOnFailure</definition>
        <argsstring>(bool throw_on_failure)</argsstring>
        <name>ThrowOnFailure</name>
        <qualifiedname>testing::Flags::ThrowOnFailure</qualifiedname>
        <param>
          <type>bool</type>
          <declname>throw_on_failure</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googletest/test/gtest_unittest.cc" line="5677" column="16" bodyfile="build/_deps/googletest-src/googletest/test/gtest_unittest.cc" bodystart="5677" bodyend="5681"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="build/_deps/googletest-src/googletest/test/gtest_unittest.cc" line="5522" column="1" bodyfile="build/_deps/googletest-src/googletest/test/gtest_unittest.cc" bodystart="5522" bodyend="5701"/>
    <listofallmembers>
      <member refid="structtesting_1_1_flags_1a8ebf8c68f918b9039926b569c880f910" prot="public" virt="non-virtual"><scope>testing::Flags</scope><name>also_run_disabled_tests</name></member>
      <member refid="structtesting_1_1_flags_1a8bee2b5f94d8248b6791d6b005db146f" prot="public" virt="non-virtual"><scope>testing::Flags</scope><name>AlsoRunDisabledTests</name></member>
      <member refid="structtesting_1_1_flags_1acccce2a9673bb61751269d2ef9c21c89" prot="public" virt="non-virtual"><scope>testing::Flags</scope><name>break_on_failure</name></member>
      <member refid="structtesting_1_1_flags_1a62660e44922321f7640bc951a04c2296" prot="public" virt="non-virtual"><scope>testing::Flags</scope><name>BreakOnFailure</name></member>
      <member refid="structtesting_1_1_flags_1a367d58aed5d9b8959b648d758449e82c" prot="public" virt="non-virtual"><scope>testing::Flags</scope><name>Brief</name></member>
      <member refid="structtesting_1_1_flags_1acffa8259476e4f802ed15d9fc9e2352c" prot="public" virt="non-virtual"><scope>testing::Flags</scope><name>brief</name></member>
      <member refid="structtesting_1_1_flags_1a06984d0553f09716e1bd9f159e7cc644" prot="public" virt="non-virtual"><scope>testing::Flags</scope><name>catch_exceptions</name></member>
      <member refid="structtesting_1_1_flags_1a2c7d89f62f4328ae0ced66154ef96b44" prot="public" virt="non-virtual"><scope>testing::Flags</scope><name>CatchExceptions</name></member>
      <member refid="structtesting_1_1_flags_1a7cdef4e6e102771fc15940931dd07e5c" prot="public" virt="non-virtual"><scope>testing::Flags</scope><name>death_test_use_fork</name></member>
      <member refid="structtesting_1_1_flags_1a4468e5625833043596c44be174349d8c" prot="public" virt="non-virtual"><scope>testing::Flags</scope><name>DeathTestUseFork</name></member>
      <member refid="structtesting_1_1_flags_1a9f149e4d169ef3d2707c5e4cbca04753" prot="public" virt="non-virtual"><scope>testing::Flags</scope><name>fail_fast</name></member>
      <member refid="structtesting_1_1_flags_1a76fceab87a2bf1e45d5fa032083a9b13" prot="public" virt="non-virtual"><scope>testing::Flags</scope><name>FailFast</name></member>
      <member refid="structtesting_1_1_flags_1afc7350b7c1ac4c0e0efe2d9a94729eb7" prot="public" virt="non-virtual"><scope>testing::Flags</scope><name>Filter</name></member>
      <member refid="structtesting_1_1_flags_1aa52c1048a7e3cbe726ed4160f2e05d14" prot="public" virt="non-virtual"><scope>testing::Flags</scope><name>filter</name></member>
      <member refid="structtesting_1_1_flags_1a41dc8942bec08ebc7f74dee545e6ad7e" prot="public" virt="non-virtual"><scope>testing::Flags</scope><name>Flags</name></member>
      <member refid="structtesting_1_1_flags_1a3c73f29131074146224018066379fb2f" prot="public" virt="non-virtual"><scope>testing::Flags</scope><name>list_tests</name></member>
      <member refid="structtesting_1_1_flags_1a825a5d763a31fe6c28f543990bd336df" prot="public" virt="non-virtual"><scope>testing::Flags</scope><name>ListTests</name></member>
      <member refid="structtesting_1_1_flags_1a507916734a6d7ff2dd02891d7849f2d3" prot="public" virt="non-virtual"><scope>testing::Flags</scope><name>Output</name></member>
      <member refid="structtesting_1_1_flags_1a8c8289b3af9310744bc25280e3980e4b" prot="public" virt="non-virtual"><scope>testing::Flags</scope><name>output</name></member>
      <member refid="structtesting_1_1_flags_1a8758d574ce5513402679df258f788733" prot="public" virt="non-virtual"><scope>testing::Flags</scope><name>print_time</name></member>
      <member refid="structtesting_1_1_flags_1af4dc8454995fb3691399a049e95de179" prot="public" virt="non-virtual"><scope>testing::Flags</scope><name>PrintTime</name></member>
      <member refid="structtesting_1_1_flags_1a89b3c85eff50bc081ab6c590359ad190" prot="public" virt="non-virtual"><scope>testing::Flags</scope><name>random_seed</name></member>
      <member refid="structtesting_1_1_flags_1a2d4880f05d0c9bd6acd4c67ebe87f9e0" prot="public" virt="non-virtual"><scope>testing::Flags</scope><name>RandomSeed</name></member>
      <member refid="structtesting_1_1_flags_1a0cd248c27f2747daf39af989c2f09eeb" prot="public" virt="non-virtual"><scope>testing::Flags</scope><name>recreate_environments_when_repeating</name></member>
      <member refid="structtesting_1_1_flags_1a74454406b978f0e9e8bf57b7a18af25a" prot="public" virt="non-virtual"><scope>testing::Flags</scope><name>RecreateEnvironmentsWhenRepeating</name></member>
      <member refid="structtesting_1_1_flags_1a56255ab957ff2fb03f6c3e9f4e3d56f1" prot="public" virt="non-virtual"><scope>testing::Flags</scope><name>Repeat</name></member>
      <member refid="structtesting_1_1_flags_1a396ed200e54cd32883504b668eeb5632" prot="public" virt="non-virtual"><scope>testing::Flags</scope><name>repeat</name></member>
      <member refid="structtesting_1_1_flags_1a19ddbbaed61bda44a1940333b7c5a469" prot="public" virt="non-virtual"><scope>testing::Flags</scope><name>Shuffle</name></member>
      <member refid="structtesting_1_1_flags_1a51c689e47e0f55c16116ac2a1d3b05d6" prot="public" virt="non-virtual"><scope>testing::Flags</scope><name>shuffle</name></member>
      <member refid="structtesting_1_1_flags_1aedd60cacac5202d70bdbca9227e77c7f" prot="public" virt="non-virtual"><scope>testing::Flags</scope><name>stack_trace_depth</name></member>
      <member refid="structtesting_1_1_flags_1aafbd8a4b7d59f7780d10c15aa0fdf456" prot="public" virt="non-virtual"><scope>testing::Flags</scope><name>StackTraceDepth</name></member>
      <member refid="structtesting_1_1_flags_1ab09849fd3e095d5628dec65ec4dce9e1" prot="public" virt="non-virtual"><scope>testing::Flags</scope><name>stream_result_to</name></member>
      <member refid="structtesting_1_1_flags_1a9cf0f64310b28eadbbfbb35584ebfc71" prot="public" virt="non-virtual"><scope>testing::Flags</scope><name>StreamResultTo</name></member>
      <member refid="structtesting_1_1_flags_1ab8e7d21e31e641efe47b8050759e001a" prot="public" virt="non-virtual"><scope>testing::Flags</scope><name>throw_on_failure</name></member>
      <member refid="structtesting_1_1_flags_1ad856df862414ed0dadf80b5e03829cc7" prot="public" virt="non-virtual"><scope>testing::Flags</scope><name>ThrowOnFailure</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
